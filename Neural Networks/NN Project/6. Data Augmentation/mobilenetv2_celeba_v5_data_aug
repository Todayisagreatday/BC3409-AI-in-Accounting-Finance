{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"mobilenetv2_celeba_v5_data_aug","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"T2IvTdM77oii","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1605969779403,"user_tz":-480,"elapsed":11073,"user":{"displayName":"yong wei","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhYJ6D3p-i8GPWEqh4u2s4VniV_lHZd6l3-eHSaqA=s64","userId":"07110467073693299033"}},"outputId":"f798ef0d-7416-4c84-bd83-6ee047de456d"},"source":["!pip install wandb -qqq"],"execution_count":null,"outputs":[{"output_type":"stream","text":["\u001b[K     |████████████████████████████████| 1.8MB 9.5MB/s \n","\u001b[K     |████████████████████████████████| 102kB 11.4MB/s \n","\u001b[K     |████████████████████████████████| 102kB 13.5MB/s \n","\u001b[K     |████████████████████████████████| 133kB 15.8MB/s \n","\u001b[K     |████████████████████████████████| 163kB 23.5MB/s \n","\u001b[K     |████████████████████████████████| 71kB 10.5MB/s \n","\u001b[?25h  Building wheel for watchdog (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for subprocess32 (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for pathtools (setup.py) ... \u001b[?25l\u001b[?25hdone\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"GqyCQTBf8gqO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1605971732439,"user_tz":-480,"elapsed":1627,"user":{"displayName":"yong wei","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhYJ6D3p-i8GPWEqh4u2s4VniV_lHZd6l3-eHSaqA=s64","userId":"07110467073693299033"}},"outputId":"b1609d7f-bacf-4c18-bfe9-4443be409ea0"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":160},"id":"8Upe0Sb0lVLx","executionInfo":{"status":"ok","timestamp":1605971737435,"user_tz":-480,"elapsed":6360,"user":{"displayName":"yong wei","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhYJ6D3p-i8GPWEqh4u2s4VniV_lHZd6l3-eHSaqA=s64","userId":"07110467073693299033"}},"outputId":"45fd6cae-f54d-4884-db29-43ad66d9d818"},"source":["import wandb\n","from wandb.keras import WandbCallback\n","import numpy as np\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","import pandas as pd\n","import tensorflow as tf\n","from sklearn.model_selection import train_test_split\n","\n","# GPU Configuration\n","gpus = tf.config.experimental.list_physical_devices('GPU')\n","if gpus:\n","    try:\n","        for gpu in gpus:\n","            tf.config.experimental.set_memory_growth(gpu, True)\n","        logical_gpus = tf.config.experimental.list_logical_devices('GPU')\n","        print(len(gpus), \"Physical GPUs,\", len(logical_gpus), \"Logical GPUs\")\n","    except RuntimeError as e:\n","        print(e)\n","\n","# Hyperparameters\n","defaults = {\n","    'epochs': 200,\n","    'batch_size': 128,\n","    'fc1_num_neurons': 1024,\n","    'fc2_num_neurons': 512,\n","    'fc3_num_neurons': 256,\n","    'seed': 7,\n","    'learning_rate': 1e-5,\n","    'optimizer': 'adam',\n","    'hidden_activation': 'relu',\n","    'output_activation': 'sigmoid',\n","    'loss_function': 'binary_crossentropy',\n","    'metrics': ['accuracy'],\n","}\n","\n","wandb.init(config=defaults, resume=True, name='No Val Part 2', project='transfer_learning_mnv2', notes='unfreeze model')\n","config = wandb.config\n","np.random.seed(config.seed)\n","tf.random.set_seed(config.seed)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33myongz\u001b[0m (use `wandb login --relogin` to force relogin)\n"],"name":"stderr"},{"output_type":"stream","text":["1 Physical GPUs, 1 Logical GPUs\n"],"name":"stdout"},{"output_type":"display_data","data":{"text/html":["\n","                Tracking run with wandb version 0.10.11<br/>\n","                Resuming run <strong style=\"color:#cdcd00\">No Val Part 2</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n","                Project page: <a href=\"https://wandb.ai/yongz/transfer_learning_mnv2\" target=\"_blank\">https://wandb.ai/yongz/transfer_learning_mnv2</a><br/>\n","                Run page: <a href=\"https://wandb.ai/yongz/transfer_learning_mnv2/runs/2zdz4lqo\" target=\"_blank\">https://wandb.ai/yongz/transfer_learning_mnv2/runs/2zdz4lqo</a><br/>\n","                Run data is saved locally in <code>/content/wandb/run-20201121_151538-2zdz4lqo</code><br/><br/>\n","            "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lx-6b3IKluD9","executionInfo":{"status":"ok","timestamp":1605972904671,"user_tz":-480,"elapsed":1055,"user":{"displayName":"yong wei","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhYJ6D3p-i8GPWEqh4u2s4VniV_lHZd6l3-eHSaqA=s64","userId":"07110467073693299033"}},"outputId":"c4cc2386-b81a-4587-807a-88f7a0383bd7"},"source":["# Load dataset as dataframe\n","df = pd.read_csv(\"/content/drive/MyDrive/Colab_Notebooks/NN_group_assignment/aligned_gender.txt\", sep='\\t')\n","train_df, test_df = train_test_split(df, test_size=0.2)\n","train_df['datadir'] = '/content/drive/MyDrive/Colab_Notebooks/NN_group_assignment/' + train_df['datadir'].astype(str)\n","test_df['datadir'] = '/content/drive/MyDrive/Colab_Notebooks/NN_group_assignment/' + test_df['datadir'].astype(str)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  after removing the cwd from sys.path.\n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FOkrhP9GBlT7","executionInfo":{"status":"ok","timestamp":1605972905167,"user_tz":-480,"elapsed":1025,"user":{"displayName":"yong wei","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhYJ6D3p-i8GPWEqh4u2s4VniV_lHZd6l3-eHSaqA=s64","userId":"07110467073693299033"}},"outputId":"55018c42-5b3a-493c-c7a6-e6d85d278056"},"source":["pd.set_option('display.max_colwidth',1000)\n","train_df[\"datadir\"].head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5495      /content/drive/MyDrive/Colab_Notebooks/NN_group_assignment/data/aligned/64504106@N06/landmark_aligned_face.911.11818767525_4a982e3535_o.jpg\n","11149     /content/drive/MyDrive/Colab_Notebooks/NN_group_assignment/data/aligned/10069023@N00/landmark_aligned_face.1930.8263683688_8e5f95e82b_o.jpg\n","4250       /content/drive/MyDrive/Colab_Notebooks/NN_group_assignment/data/aligned/28754132@N06/landmark_aligned_face.608.9356512507_5423448173_o.jpg\n","8171      /content/drive/MyDrive/Colab_Notebooks/NN_group_assignment/data/aligned/50739822@N00/landmark_aligned_face.1365.8559786721_f00328209d_o.jpg\n","5739     /content/drive/MyDrive/Colab_Notebooks/NN_group_assignment/data/aligned/115021413@N07/landmark_aligned_face.949.12058615955_7cfb6b31c0_o.jpg\n","Name: datadir, dtype: object"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"IRkQ_1TNa5TZ"},"source":["# Load images into keras image generator \n","datagen_train = ImageDataGenerator(\n","    preprocessing_function=tf.keras.applications.mobilenet_v2.preprocess_input,\n","    horizontal_flip=True,\n","    rotation_range=90,\n","    brightness_range=[0.5,1.5]\n","\n",")\n","datagen_test = ImageDataGenerator(\n","    preprocessing_function=tf.keras.applications.mobilenet_v2.preprocess_input,\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"30_PIqmUcXW3","executionInfo":{"status":"ok","timestamp":1605972911136,"user_tz":-480,"elapsed":6491,"user":{"displayName":"yong wei","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhYJ6D3p-i8GPWEqh4u2s4VniV_lHZd6l3-eHSaqA=s64","userId":"07110467073693299033"}},"outputId":"1c9008d2-b9c8-4f4e-a224-281c6e6cc524"},"source":["train_generator = datagen_train.flow_from_dataframe(\n","    dataframe=train_df,\n","    x_col='datadir',\n","    y_col='gender',\n","    batch_size=config.batch_size,\n","    seed=config.seed,\n","    shuffle=True,\n","    class_mode='raw',\n","    target_size=(224,224),\n",")\n","\n","test_generator = datagen_test.flow_from_dataframe(\n","    dataframe=test_df,\n","    x_col='datadir',\n","    y_col='gender',\n","    batch_size=config.batch_size,\n","    seed=config.seed,\n","    shuffle=True,\n","    class_mode='raw',\n","    target_size=(224,224),\n",")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Found 9755 validated image filenames.\n","Found 2439 validated image filenames.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ii_IK7jFc1aq"},"source":["# Define model\n","mobile_net_v2 = tf.keras.applications.MobileNetV2(\n","    include_top=False,\n","    pooling='avg',\n","    weights=None,\n","    input_shape=(224,224,3),\n",")\n","\n","# Set mobilenetv2 to true\n","mobile_net_v2.trainable = True\n","\n","fc1 = tf.keras.layers.Dense(\n","    config.fc1_num_neurons,\n","    activation=config.hidden_activation,\n",")\n","\n","fc2 = tf.keras.layers.Dense(\n","    config.fc2_num_neurons,\n","    activation=config.hidden_activation,\n",")\n","\n","fc3 = tf.keras.layers.Dense(\n","    config.fc2_num_neurons,\n","    activation=config.hidden_activation,\n",")\n","\n","bn1 = tf.keras.layers.BatchNormalization()\n","bn2 = tf.keras.layers.BatchNormalization()\n","bn3 = tf.keras.layers.BatchNormalization()\n","bn4 = tf.keras.layers.BatchNormalization()\n","\n","model = tf.keras.models.Sequential([\n","    mobile_net_v2,\n","    tf.keras.layers.Flatten(),\n","    bn1,\n","    fc1,\n","    bn2,\n","    fc2,\n","    bn3,\n","    fc3,\n","    bn4,\n","    tf.keras.layers.Dense(1, activation=config.output_activation),\n","])\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jWCNdUB9dcJt","executionInfo":{"status":"ok","timestamp":1605972914336,"user_tz":-480,"elapsed":8798,"user":{"displayName":"yong wei","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhYJ6D3p-i8GPWEqh4u2s4VniV_lHZd6l3-eHSaqA=s64","userId":"07110467073693299033"}},"outputId":"1fd8e1ae-f452-4e02-cee2-e3e8e9b05fd1"},"source":["\n","# Load model weights\n","# model.load_weights('/content/drive/MyDrive/Colab_Notebooks/NN_group_assignment/pretrained_adience_v5.h5')\n","model.load_weights('/content/drive/MyDrive/Colab_Notebooks/NN_group_assignment/model_celeba_no_val.h5')\n","model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","mobilenetv2_1.00_224 (Functi (None, 1280)              2257984   \n","_________________________________________________________________\n","flatten (Flatten)            (None, 1280)              0         \n","_________________________________________________________________\n","batch_normalization (BatchNo (None, 1280)              5120      \n","_________________________________________________________________\n","dense (Dense)                (None, 1024)              1311744   \n","_________________________________________________________________\n","batch_normalization_1 (Batch (None, 1024)              4096      \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 512)               524800    \n","_________________________________________________________________\n","batch_normalization_2 (Batch (None, 512)               2048      \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 512)               262656    \n","_________________________________________________________________\n","batch_normalization_3 (Batch (None, 512)               2048      \n","_________________________________________________________________\n","dense_3 (Dense)              (None, 1)                 513       \n","=================================================================\n","Total params: 4,371,009\n","Trainable params: 4,330,241\n","Non-trainable params: 40,768\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"5CBaAkSa7_IT","colab":{"base_uri":"https://localhost:8080/"},"outputId":"f8f07d34-8906-495b-ab1e-80b36af7516c"},"source":["# Compile model \n","model.compile(\n","    optimizer=tf.keras.optimizers.Adam(learning_rate=config.learning_rate),\n","    loss=config.loss_function,\n","    metrics=config.metrics,\n",")\n","\n","# Fit model\n","model.fit(\n","    train_generator,\n","    validation_data=test_generator,\n","    epochs=config.epochs,\n","    callbacks=[WandbCallback()],\n",")\n","model.save_weights('pretrained_adience_v5_cont.h5') "],"execution_count":null,"outputs":[{"output_type":"stream","text":["Epoch 1/200\n","77/77 [==============================] - 2876s 37s/step - loss: 2.8183 - accuracy: 0.6284 - val_loss: 0.7568 - val_accuracy: 0.7573\n","Epoch 2/200\n","77/77 [==============================] - 286s 4s/step - loss: 2.5715 - accuracy: 0.6401 - val_loss: 0.7398 - val_accuracy: 0.7700\n","Epoch 3/200\n","77/77 [==============================] - 286s 4s/step - loss: 2.3321 - accuracy: 0.6495 - val_loss: 0.7337 - val_accuracy: 0.7815\n","Epoch 4/200\n","77/77 [==============================] - 285s 4s/step - loss: 2.1534 - accuracy: 0.6593 - val_loss: 0.7238 - val_accuracy: 0.7872\n","Epoch 5/200\n","77/77 [==============================] - 283s 4s/step - loss: 1.9773 - accuracy: 0.6619 - val_loss: 0.7101 - val_accuracy: 0.7929\n","Epoch 6/200\n","77/77 [==============================] - 285s 4s/step - loss: 1.7994 - accuracy: 0.6681 - val_loss: 0.6914 - val_accuracy: 0.7954\n","Epoch 7/200\n","77/77 [==============================] - 281s 4s/step - loss: 1.6904 - accuracy: 0.6754 - val_loss: 0.6720 - val_accuracy: 0.7999\n","Epoch 8/200\n","77/77 [==============================] - 281s 4s/step - loss: 1.5470 - accuracy: 0.6894 - val_loss: 0.6547 - val_accuracy: 0.8036\n","Epoch 9/200\n","77/77 [==============================] - 279s 4s/step - loss: 1.4783 - accuracy: 0.6849 - val_loss: 0.6391 - val_accuracy: 0.8028\n","Epoch 10/200\n","77/77 [==============================] - 277s 4s/step - loss: 1.3579 - accuracy: 0.6951 - val_loss: 0.6182 - val_accuracy: 0.8061\n","Epoch 11/200\n","77/77 [==============================] - 274s 4s/step - loss: 1.2532 - accuracy: 0.7030 - val_loss: 0.6022 - val_accuracy: 0.8106\n","Epoch 12/200\n","77/77 [==============================] - 274s 4s/step - loss: 1.2030 - accuracy: 0.7123 - val_loss: 0.5880 - val_accuracy: 0.8093\n","Epoch 13/200\n","77/77 [==============================] - 270s 4s/step - loss: 1.1407 - accuracy: 0.7101 - val_loss: 0.5753 - val_accuracy: 0.8089\n","Epoch 14/200\n","77/77 [==============================] - 270s 4s/step - loss: 1.0784 - accuracy: 0.7155 - val_loss: 0.5612 - val_accuracy: 0.8089\n","Epoch 15/200\n","77/77 [==============================] - 267s 3s/step - loss: 1.0515 - accuracy: 0.7137 - val_loss: 0.5482 - val_accuracy: 0.8106\n","Epoch 16/200\n","77/77 [==============================] - 266s 3s/step - loss: 0.9942 - accuracy: 0.7219 - val_loss: 0.5384 - val_accuracy: 0.8147\n","Epoch 17/200\n","77/77 [==============================] - 265s 3s/step - loss: 0.9358 - accuracy: 0.7310 - val_loss: 0.5263 - val_accuracy: 0.8180\n","Epoch 18/200\n","77/77 [==============================] - 261s 3s/step - loss: 0.9267 - accuracy: 0.7205 - val_loss: 0.5158 - val_accuracy: 0.8188\n","Epoch 19/200\n","77/77 [==============================] - 261s 3s/step - loss: 0.8696 - accuracy: 0.7295 - val_loss: 0.5064 - val_accuracy: 0.8171\n","Epoch 20/200\n","77/77 [==============================] - 261s 3s/step - loss: 0.8595 - accuracy: 0.7343 - val_loss: 0.4972 - val_accuracy: 0.8204\n","Epoch 21/200\n","77/77 [==============================] - 263s 3s/step - loss: 0.8059 - accuracy: 0.7281 - val_loss: 0.4863 - val_accuracy: 0.8196\n","Epoch 22/200\n","77/77 [==============================] - 262s 3s/step - loss: 0.7619 - accuracy: 0.7379 - val_loss: 0.4787 - val_accuracy: 0.8204\n","Epoch 23/200\n","77/77 [==============================] - 259s 3s/step - loss: 0.7449 - accuracy: 0.7405 - val_loss: 0.4715 - val_accuracy: 0.8216\n","Epoch 24/200\n","77/77 [==============================] - 262s 3s/step - loss: 0.7417 - accuracy: 0.7376 - val_loss: 0.4637 - val_accuracy: 0.8253\n","Epoch 25/200\n","77/77 [==============================] - 262s 3s/step - loss: 0.6927 - accuracy: 0.7447 - val_loss: 0.4556 - val_accuracy: 0.8274\n","Epoch 26/200\n","77/77 [==============================] - 262s 3s/step - loss: 0.6989 - accuracy: 0.7376 - val_loss: 0.4512 - val_accuracy: 0.8294\n","Epoch 27/200\n","77/77 [==============================] - 265s 3s/step - loss: 0.6468 - accuracy: 0.7525 - val_loss: 0.4463 - val_accuracy: 0.8360\n","Epoch 28/200\n","77/77 [==============================] - 267s 3s/step - loss: 0.6349 - accuracy: 0.7456 - val_loss: 0.4425 - val_accuracy: 0.8352\n","Epoch 29/200\n","77/77 [==============================] - 264s 3s/step - loss: 0.6369 - accuracy: 0.7482 - val_loss: 0.4343 - val_accuracy: 0.8360\n","Epoch 30/200\n","77/77 [==============================] - 267s 3s/step - loss: 0.6226 - accuracy: 0.7516 - val_loss: 0.4302 - val_accuracy: 0.8364\n","Epoch 31/200\n","77/77 [==============================] - 267s 3s/step - loss: 0.5946 - accuracy: 0.7569 - val_loss: 0.4252 - val_accuracy: 0.8380\n","Epoch 32/200\n","77/77 [==============================] - 266s 3s/step - loss: 0.5838 - accuracy: 0.7552 - val_loss: 0.4199 - val_accuracy: 0.8389\n","Epoch 33/200\n","77/77 [==============================] - 266s 3s/step - loss: 0.5798 - accuracy: 0.7538 - val_loss: 0.4140 - val_accuracy: 0.8397\n","Epoch 34/200\n","77/77 [==============================] - 268s 3s/step - loss: 0.5649 - accuracy: 0.7583 - val_loss: 0.4105 - val_accuracy: 0.8401\n","Epoch 35/200\n","77/77 [==============================] - 265s 3s/step - loss: 0.5563 - accuracy: 0.7581 - val_loss: 0.4057 - val_accuracy: 0.8401\n","Epoch 36/200\n","77/77 [==============================] - 264s 3s/step - loss: 0.5629 - accuracy: 0.7561 - val_loss: 0.4017 - val_accuracy: 0.8409\n","Epoch 37/200\n","77/77 [==============================] - 264s 3s/step - loss: 0.5357 - accuracy: 0.7592 - val_loss: 0.3982 - val_accuracy: 0.8401\n","Epoch 38/200\n","77/77 [==============================] - 263s 3s/step - loss: 0.5330 - accuracy: 0.7654 - val_loss: 0.3944 - val_accuracy: 0.8421\n","Epoch 39/200\n","77/77 [==============================] - 265s 3s/step - loss: 0.5342 - accuracy: 0.7606 - val_loss: 0.3904 - val_accuracy: 0.8426\n","Epoch 40/200\n","77/77 [==============================] - 265s 3s/step - loss: 0.5131 - accuracy: 0.7618 - val_loss: 0.3879 - val_accuracy: 0.8446\n","Epoch 41/200\n","77/77 [==============================] - 265s 3s/step - loss: 0.5271 - accuracy: 0.7613 - val_loss: 0.3832 - val_accuracy: 0.8430\n","Epoch 42/200\n","77/77 [==============================] - 263s 3s/step - loss: 0.4968 - accuracy: 0.7766 - val_loss: 0.3802 - val_accuracy: 0.8438\n","Epoch 43/200\n","77/77 [==============================] - 265s 3s/step - loss: 0.4970 - accuracy: 0.7690 - val_loss: 0.3780 - val_accuracy: 0.8442\n","Epoch 44/200\n","77/77 [==============================] - 261s 3s/step - loss: 0.5094 - accuracy: 0.7705 - val_loss: 0.3754 - val_accuracy: 0.8446\n","Epoch 45/200\n","77/77 [==============================] - 262s 3s/step - loss: 0.4867 - accuracy: 0.7719 - val_loss: 0.3733 - val_accuracy: 0.8479\n","Epoch 46/200\n","77/77 [==============================] - 262s 3s/step - loss: 0.4962 - accuracy: 0.7728 - val_loss: 0.3697 - val_accuracy: 0.8467\n","Epoch 47/200\n","77/77 [==============================] - 263s 3s/step - loss: 0.4886 - accuracy: 0.7712 - val_loss: 0.3661 - val_accuracy: 0.8467\n","Epoch 48/200\n","77/77 [==============================] - 267s 3s/step - loss: 0.4955 - accuracy: 0.7637 - val_loss: 0.3628 - val_accuracy: 0.8475\n","Epoch 49/200\n","77/77 [==============================] - 271s 4s/step - loss: 0.4834 - accuracy: 0.7676 - val_loss: 0.3599 - val_accuracy: 0.8483\n","Epoch 50/200\n","77/77 [==============================] - 267s 3s/step - loss: 0.4733 - accuracy: 0.7752 - val_loss: 0.3580 - val_accuracy: 0.8487\n","Epoch 51/200\n","77/77 [==============================] - 264s 3s/step - loss: 0.4713 - accuracy: 0.7777 - val_loss: 0.3561 - val_accuracy: 0.8491\n","Epoch 52/200\n","77/77 [==============================] - 265s 3s/step - loss: 0.4748 - accuracy: 0.7782 - val_loss: 0.3514 - val_accuracy: 0.8499\n","Epoch 53/200\n","77/77 [==============================] - 266s 3s/step - loss: 0.4773 - accuracy: 0.7753 - val_loss: 0.3474 - val_accuracy: 0.8471\n","Epoch 54/200\n","77/77 [==============================] - 267s 3s/step - loss: 0.4628 - accuracy: 0.7846 - val_loss: 0.3464 - val_accuracy: 0.8508\n","Epoch 55/200\n","77/77 [==============================] - 263s 3s/step - loss: 0.4557 - accuracy: 0.7889 - val_loss: 0.3455 - val_accuracy: 0.8520\n","Epoch 56/200\n","77/77 [==============================] - 259s 3s/step - loss: 0.4538 - accuracy: 0.7833 - val_loss: 0.3440 - val_accuracy: 0.8524\n","Epoch 57/200\n","77/77 [==============================] - 260s 3s/step - loss: 0.4507 - accuracy: 0.7871 - val_loss: 0.3418 - val_accuracy: 0.8532\n","Epoch 58/200\n","77/77 [==============================] - 260s 3s/step - loss: 0.4618 - accuracy: 0.7806 - val_loss: 0.3399 - val_accuracy: 0.8528\n","Epoch 59/200\n","77/77 [==============================] - 263s 3s/step - loss: 0.4594 - accuracy: 0.7810 - val_loss: 0.3369 - val_accuracy: 0.8540\n","Epoch 60/200\n","77/77 [==============================] - 266s 3s/step - loss: 0.4432 - accuracy: 0.7863 - val_loss: 0.3354 - val_accuracy: 0.8544\n","Epoch 61/200\n","77/77 [==============================] - 265s 3s/step - loss: 0.4518 - accuracy: 0.7883 - val_loss: 0.3325 - val_accuracy: 0.8549\n","Epoch 62/200\n","77/77 [==============================] - 266s 3s/step - loss: 0.4415 - accuracy: 0.7852 - val_loss: 0.3305 - val_accuracy: 0.8540\n","Epoch 63/200\n","77/77 [==============================] - 266s 3s/step - loss: 0.4430 - accuracy: 0.7874 - val_loss: 0.3290 - val_accuracy: 0.8544\n","Epoch 64/200\n","77/77 [==============================] - 266s 3s/step - loss: 0.4332 - accuracy: 0.7917 - val_loss: 0.3275 - val_accuracy: 0.8561\n","Epoch 65/200\n","77/77 [==============================] - 268s 3s/step - loss: 0.4382 - accuracy: 0.7923 - val_loss: 0.3263 - val_accuracy: 0.8581\n","Epoch 66/200\n","77/77 [==============================] - 270s 4s/step - loss: 0.4438 - accuracy: 0.7900 - val_loss: 0.3234 - val_accuracy: 0.8577\n","Epoch 67/200\n","77/77 [==============================] - 270s 4s/step - loss: 0.4375 - accuracy: 0.7933 - val_loss: 0.3224 - val_accuracy: 0.8573\n","Epoch 68/200\n","77/77 [==============================] - 271s 4s/step - loss: 0.4327 - accuracy: 0.7948 - val_loss: 0.3203 - val_accuracy: 0.8585\n","Epoch 69/200\n","77/77 [==============================] - 271s 4s/step - loss: 0.4284 - accuracy: 0.7949 - val_loss: 0.3189 - val_accuracy: 0.8590\n","Epoch 70/200\n","77/77 [==============================] - 273s 4s/step - loss: 0.4264 - accuracy: 0.7992 - val_loss: 0.3155 - val_accuracy: 0.8585\n","Epoch 71/200\n","77/77 [==============================] - 270s 4s/step - loss: 0.4218 - accuracy: 0.8026 - val_loss: 0.3133 - val_accuracy: 0.8594\n","Epoch 72/200\n","77/77 [==============================] - 271s 4s/step - loss: 0.4279 - accuracy: 0.7977 - val_loss: 0.3127 - val_accuracy: 0.8594\n","Epoch 73/200\n","77/77 [==============================] - 271s 4s/step - loss: 0.4272 - accuracy: 0.7971 - val_loss: 0.3120 - val_accuracy: 0.8622\n","Epoch 74/200\n","77/77 [==============================] - 272s 4s/step - loss: 0.4258 - accuracy: 0.7962 - val_loss: 0.3111 - val_accuracy: 0.8626\n","Epoch 75/200\n","77/77 [==============================] - 269s 3s/step - loss: 0.4183 - accuracy: 0.8013 - val_loss: 0.3093 - val_accuracy: 0.8639\n","Epoch 76/200\n","77/77 [==============================] - 270s 4s/step - loss: 0.4244 - accuracy: 0.7963 - val_loss: 0.3076 - val_accuracy: 0.8647\n","Epoch 77/200\n","77/77 [==============================] - 270s 4s/step - loss: 0.4170 - accuracy: 0.8027 - val_loss: 0.3062 - val_accuracy: 0.8663\n","Epoch 78/200\n","77/77 [==============================] - 268s 3s/step - loss: 0.4111 - accuracy: 0.8085 - val_loss: 0.3049 - val_accuracy: 0.8680\n","Epoch 79/200\n","77/77 [==============================] - 267s 3s/step - loss: 0.4101 - accuracy: 0.8057 - val_loss: 0.3036 - val_accuracy: 0.8688\n","Epoch 80/200\n","77/77 [==============================] - 266s 3s/step - loss: 0.4064 - accuracy: 0.8051 - val_loss: 0.3026 - val_accuracy: 0.8680\n","Epoch 81/200\n","77/77 [==============================] - 267s 3s/step - loss: 0.4082 - accuracy: 0.8053 - val_loss: 0.3010 - val_accuracy: 0.8708\n","Epoch 82/200\n","77/77 [==============================] - 270s 4s/step - loss: 0.4106 - accuracy: 0.8108 - val_loss: 0.2997 - val_accuracy: 0.8729\n","Epoch 83/200\n","77/77 [==============================] - 268s 3s/step - loss: 0.4090 - accuracy: 0.8116 - val_loss: 0.2990 - val_accuracy: 0.8729\n","Epoch 84/200\n","77/77 [==============================] - 265s 3s/step - loss: 0.4024 - accuracy: 0.8132 - val_loss: 0.2980 - val_accuracy: 0.8729\n","Epoch 85/200\n","77/77 [==============================] - 260s 3s/step - loss: 0.4093 - accuracy: 0.8014 - val_loss: 0.2966 - val_accuracy: 0.8745\n","Epoch 86/200\n","77/77 [==============================] - 257s 3s/step - loss: 0.3920 - accuracy: 0.8145 - val_loss: 0.2958 - val_accuracy: 0.8737\n","Epoch 87/200\n","77/77 [==============================] - 258s 3s/step - loss: 0.4032 - accuracy: 0.8095 - val_loss: 0.2948 - val_accuracy: 0.8745\n","Epoch 88/200\n","77/77 [==============================] - 259s 3s/step - loss: 0.3917 - accuracy: 0.8164 - val_loss: 0.2936 - val_accuracy: 0.8729\n","Epoch 89/200\n","77/77 [==============================] - 258s 3s/step - loss: 0.3998 - accuracy: 0.8101 - val_loss: 0.2917 - val_accuracy: 0.8733\n","Epoch 90/200\n","77/77 [==============================] - 259s 3s/step - loss: 0.3976 - accuracy: 0.8123 - val_loss: 0.2905 - val_accuracy: 0.8737\n","Epoch 91/200\n","77/77 [==============================] - 259s 3s/step - loss: 0.3995 - accuracy: 0.8078 - val_loss: 0.2896 - val_accuracy: 0.8733\n","Epoch 92/200\n","77/77 [==============================] - 260s 3s/step - loss: 0.3850 - accuracy: 0.8198 - val_loss: 0.2882 - val_accuracy: 0.8729\n","Epoch 93/200\n","77/77 [==============================] - 260s 3s/step - loss: 0.3843 - accuracy: 0.8159 - val_loss: 0.2872 - val_accuracy: 0.8741\n","Epoch 94/200\n","77/77 [==============================] - 260s 3s/step - loss: 0.3882 - accuracy: 0.8180 - val_loss: 0.2861 - val_accuracy: 0.8762\n","Epoch 95/200\n","77/77 [==============================] - 259s 3s/step - loss: 0.3815 - accuracy: 0.8215 - val_loss: 0.2854 - val_accuracy: 0.8762\n","Epoch 96/200\n","77/77 [==============================] - 257s 3s/step - loss: 0.3792 - accuracy: 0.8222 - val_loss: 0.2847 - val_accuracy: 0.8766\n","Epoch 97/200\n","77/77 [==============================] - 256s 3s/step - loss: 0.3772 - accuracy: 0.8247 - val_loss: 0.2837 - val_accuracy: 0.8766\n","Epoch 98/200\n","77/77 [==============================] - 256s 3s/step - loss: 0.3767 - accuracy: 0.8256 - val_loss: 0.2825 - val_accuracy: 0.8774\n","Epoch 99/200\n","77/77 [==============================] - 262s 3s/step - loss: 0.3773 - accuracy: 0.8282 - val_loss: 0.2816 - val_accuracy: 0.8774\n","Epoch 100/200\n","77/77 [==============================] - 262s 3s/step - loss: 0.3884 - accuracy: 0.8155 - val_loss: 0.2803 - val_accuracy: 0.8795\n","Epoch 101/200\n","77/77 [==============================] - 277s 4s/step - loss: 0.3809 - accuracy: 0.8298 - val_loss: 0.2792 - val_accuracy: 0.8803\n","Epoch 102/200\n","77/77 [==============================] - 264s 3s/step - loss: 0.3787 - accuracy: 0.8242 - val_loss: 0.2780 - val_accuracy: 0.8799\n","Epoch 103/200\n","77/77 [==============================] - 258s 3s/step - loss: 0.3814 - accuracy: 0.8240 - val_loss: 0.2771 - val_accuracy: 0.8807\n","Epoch 104/200\n","77/77 [==============================] - 257s 3s/step - loss: 0.3717 - accuracy: 0.8287 - val_loss: 0.2763 - val_accuracy: 0.8811\n","Epoch 105/200\n","77/77 [==============================] - 256s 3s/step - loss: 0.3679 - accuracy: 0.8290 - val_loss: 0.2752 - val_accuracy: 0.8819\n","Epoch 106/200\n","77/77 [==============================] - 260s 3s/step - loss: 0.3649 - accuracy: 0.8321 - val_loss: 0.2747 - val_accuracy: 0.8803\n","Epoch 107/200\n","77/77 [==============================] - 278s 4s/step - loss: 0.3744 - accuracy: 0.8285 - val_loss: 0.2746 - val_accuracy: 0.8799\n","Epoch 108/200\n","77/77 [==============================] - 264s 3s/step - loss: 0.3645 - accuracy: 0.8332 - val_loss: 0.2732 - val_accuracy: 0.8811\n","Epoch 109/200\n","77/77 [==============================] - 259s 3s/step - loss: 0.3679 - accuracy: 0.8311 - val_loss: 0.2726 - val_accuracy: 0.8795\n","Epoch 110/200\n","77/77 [==============================] - 279s 4s/step - loss: 0.3629 - accuracy: 0.8320 - val_loss: 0.2718 - val_accuracy: 0.8807\n","Epoch 111/200\n","77/77 [==============================] - 278s 4s/step - loss: 0.3661 - accuracy: 0.8363 - val_loss: 0.2704 - val_accuracy: 0.8803\n","Epoch 112/200\n","77/77 [==============================] - 282s 4s/step - loss: 0.3567 - accuracy: 0.8353 - val_loss: 0.2701 - val_accuracy: 0.8811\n","Epoch 113/200\n","27/77 [=========>....................] - ETA: 2:44 - loss: 0.3654 - accuracy: 0.8278"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"B8UO4YoexLEA"},"source":[""],"execution_count":null,"outputs":[]}]}