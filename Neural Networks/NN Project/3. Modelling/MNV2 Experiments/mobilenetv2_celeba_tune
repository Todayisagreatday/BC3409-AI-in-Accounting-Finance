{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"mobilenetv2_celeba_tune","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMbZPz66PoXJlHuly1fHW2C"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"9d53fb443234469abcc26867ed58bbd3":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","state":{"_view_name":"VBoxView","_dom_classes":[],"_model_name":"VBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_ea764d3c37204b498c1f9bbd8a78e056","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_bc9e2dca3ff44b559c4eb1513896675f","IPY_MODEL_ab2516e759fa4e2a9588a578b0febf55"]}},"ea764d3c37204b498c1f9bbd8a78e056":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"bc9e2dca3ff44b559c4eb1513896675f":{"model_module":"@jupyter-widgets/controls","model_name":"LabelModel","state":{"_view_name":"LabelView","style":"IPY_MODEL_2f9a7ae7d6dc42028409aa2d0606d190","_dom_classes":[],"description":"","_model_name":"LabelModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 40.29MB of 40.29MB uploaded (0.00MB deduped)\r","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_5740cef1b70440e98c9ee2e3f508603f"}},"ab2516e759fa4e2a9588a578b0febf55":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_278c7ba513d544c0aa5e1f4598055c15","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_3eaabd47474a42a9ba02642d7cbfc3bf"}},"2f9a7ae7d6dc42028409aa2d0606d190":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"5740cef1b70440e98c9ee2e3f508603f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"278c7ba513d544c0aa5e1f4598055c15":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"3eaabd47474a42a9ba02642d7cbfc3bf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"3KciDo0pLcaW"},"source":["# Install libraries"]},{"cell_type":"code","metadata":{"id":"T2IvTdM77oii","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1606102755635,"user_tz":-480,"elapsed":8923,"user":{"displayName":"Kenneth Ng","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKwZnZ2dHsOvtWnGFQksMtsfZc2QK_Fv86edRayg=s64","userId":"07556015887030206568"}},"outputId":"24d1cb93-985f-4459-a100-273795cddadd"},"source":["!pip install wandb -qqq"],"execution_count":1,"outputs":[{"output_type":"stream","text":["\u001b[K     |████████████████████████████████| 1.8MB 11.4MB/s \n","\u001b[K     |████████████████████████████████| 163kB 53.5MB/s \n","\u001b[K     |████████████████████████████████| 133kB 57.4MB/s \n","\u001b[K     |████████████████████████████████| 102kB 14.7MB/s \n","\u001b[K     |████████████████████████████████| 102kB 15.6MB/s \n","\u001b[K     |████████████████████████████████| 71kB 11.0MB/s \n","\u001b[?25h  Building wheel for watchdog (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for subprocess32 (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for pathtools (setup.py) ... \u001b[?25l\u001b[?25hdone\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"vJ7mCikzLeff"},"source":["# Mount Drive"]},{"cell_type":"code","metadata":{"id":"GqyCQTBf8gqO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1606102786244,"user_tz":-480,"elapsed":38867,"user":{"displayName":"Kenneth Ng","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKwZnZ2dHsOvtWnGFQksMtsfZc2QK_Fv86edRayg=s64","userId":"07556015887030206568"}},"outputId":"8e0ae150-3b47-4757-ce3e-2ddf06a1d6f1"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"7K1kKuWlLgQV"},"source":["# Model"]},{"cell_type":"code","metadata":{"id":"5CBaAkSa7_IT","colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["9d53fb443234469abcc26867ed58bbd3","ea764d3c37204b498c1f9bbd8a78e056","bc9e2dca3ff44b559c4eb1513896675f","ab2516e759fa4e2a9588a578b0febf55","2f9a7ae7d6dc42028409aa2d0606d190","5740cef1b70440e98c9ee2e3f508603f","278c7ba513d544c0aa5e1f4598055c15","3eaabd47474a42a9ba02642d7cbfc3bf"]},"executionInfo":{"status":"ok","timestamp":1606112715992,"user_tz":-480,"elapsed":5494180,"user":{"displayName":"Kenneth Ng","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKwZnZ2dHsOvtWnGFQksMtsfZc2QK_Fv86edRayg=s64","userId":"07556015887030206568"}},"outputId":"a56571dc-b750-467a-8107-2efc84398832"},"source":["import wandb\n","from wandb.keras import WandbCallback\n","import numpy as np\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","import pandas as pd\n","import tensorflow as tf\n","from sklearn.model_selection import train_test_split\n","\n","# GPU Configuration\n","gpus = tf.config.experimental.list_physical_devices('GPU')\n","if gpus:\n","    try:\n","        for gpu in gpus:\n","            tf.config.experimental.set_memory_growth(gpu, True)\n","        logical_gpus = tf.config.experimental.list_logical_devices('GPU')\n","        print(len(gpus), \"Physical GPUs,\", len(logical_gpus), \"Logical GPUs\")\n","    except RuntimeError as e:\n","        print(e)\n","\n","# Hyperparameters\n","defaults = {\n","    'epochs': 35,\n","    'batch_size': 64,\n","    'fc1_num_neurons': 512,\n","    'fc2_num_neurons': 512,\n","    'fc3_num_neurons': 512,\n","    'seed': 7,\n","    'learning_rate': 1e-5,\n","    'weight_decay' : 0.001,\n","    'optimizer': 'adam',\n","    'hidden_activation': 'relu',\n","    'output_activation': 'sigmoid',\n","    'loss_function': 'binary_crossentropy',\n","    'metrics': ['accuracy'],\n","}\n","\n","wandb.init(config=defaults, resume=True, name='MNV2 Pretrain', project='nn_project_tuning', notes='must be best model')\n","config = wandb.config\n","np.random.seed(config.seed)\n","tf.random.set_seed(config.seed)\n","\n","\n","# Load dataset as dataframe\n","df = pd.read_csv(\"/content/drive/My Drive/Y4 Sem 1/NN Project/aligned_gender.txt\", sep='\\t')\n","df['datadir'] = '/content/drive/My Drive/Y4 Sem 1/NN Project/' + df['datadir'].astype(str)\n","train_df, test_df = train_test_split(df, test_size=0.2)\n","\n","# Load images into keras image generator \n","datagen_train = ImageDataGenerator(\n","    preprocessing_function=tf.keras.applications.mobilenet_v2.preprocess_input,\n",")\n","datagen_test = ImageDataGenerator(\n","    preprocessing_function=tf.keras.applications.mobilenet_v2.preprocess_input,\n",")\n","\n","train_generator = datagen_train.flow_from_dataframe(\n","    dataframe=train_df,\n","    x_col='datadir',\n","    y_col='gender',\n","    batch_size=config.batch_size,\n","    seed=config.seed,\n","    shuffle=True,\n","    class_mode='raw',\n","    target_size=(224,224),\n",")\n","\n","test_generator = datagen_test.flow_from_dataframe(\n","    dataframe=test_df,\n","    x_col='datadir',\n","    y_col='gender',\n","    batch_size=config.batch_size,\n","    seed=config.seed,\n","    shuffle=True,\n","    class_mode='raw',\n","    target_size=(224,224),\n",")\n","\n","# Define model\n","mobile_net_v2 = tf.keras.applications.MobileNetV2(\n","    include_top=False,\n","    pooling='avg',\n","    weights=None,\n","    input_shape=(224,224,3),\n",")\n","\n","# Set mobilenetv2 to true\n","mobile_net_v2.trainable = True\n","\n","fc1 = tf.keras.layers.Dense(\n","    config.fc1_num_neurons,\n","    activation=config.hidden_activation,\n","    kernel_regularizer=tf.keras.regularizers.L2(l2=config.weight_decay)\n",")\n","\n","fc2 = tf.keras.layers.Dense(\n","    config.fc2_num_neurons,\n","    activation=config.hidden_activation,\n","    kernel_regularizer=tf.keras.regularizers.L2(l2=config.weight_decay)\n",")\n","\n","fc3 = tf.keras.layers.Dense(\n","    config.fc2_num_neurons,\n","    activation=config.hidden_activation,\n","    kernel_regularizer=tf.keras.regularizers.L2(l2=config.weight_decay)\n",")\n","\n","bn1 = tf.keras.layers.BatchNormalization()\n","bn2 = tf.keras.layers.BatchNormalization()\n","bn3 = tf.keras.layers.BatchNormalization()\n","bn4 = tf.keras.layers.BatchNormalization()\n","\n","model = tf.keras.models.Sequential([\n","    mobile_net_v2,\n","    tf.keras.layers.Flatten(),\n","    bn1,\n","    fc1,\n","    tf.keras.layers.Dropout(0.5),\n","    bn2,\n","    fc2,\n","    tf.keras.layers.Dropout(0.5),\n","    bn3,\n","    fc3,\n","    tf.keras.layers.Dropout(0),\n","    bn4,\n","    tf.keras.layers.Dense(1, activation=config.output_activation),\n","])\n","# Load model weights\n","model.load_weights('pretrained_adience_tune.h5')\n","model.summary()\n","\n","# Compile model \n","model.compile(\n","    optimizer=tf.keras.optimizers.Adam(learning_rate=config.learning_rate),\n","    loss=config.loss_function,\n","    metrics=config.metrics,\n",")\n","\n","# Fit model\n","model.fit(\n","    train_generator,\n","    validation_data=test_generator,\n","    epochs=config.epochs,\n","    callbacks=[WandbCallback()],\n",")\n","model.save_weights('pretrained_adience_tune_cont.h5') "],"execution_count":4,"outputs":[{"output_type":"stream","text":["1 Physical GPUs, 1 Logical GPUs\n"],"name":"stdout"},{"output_type":"display_data","data":{"text/html":["Finishing last run (ID:3cdjvxyo) before initializing another..."],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<br/>Waiting for W&B process to finish, PID 327<br/>Program ended successfully."],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9d53fb443234469abcc26867ed58bbd3","version_minor":0,"version_major":2},"text/plain":["VBox(children=(Label(value=' 39.90MB of 39.90MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.…"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["Find user logs for this run at: <code>/content/wandb/run-20201123_034049-3cdjvxyo/logs/debug.log</code>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["Find internal logs for this run at: <code>/content/wandb/run-20201123_034049-3cdjvxyo/logs/debug-internal.log</code>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<h3>Run summary:</h3><br/><style>\n","    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n","    </style><table class=\"wandb\">\n","<tr><td>epoch</td><td>14</td></tr><tr><td>loss</td><td>2.80523</td></tr><tr><td>accuracy</td><td>0.92927</td></tr><tr><td>val_loss</td><td>2.83597</td></tr><tr><td>val_accuracy</td><td>0.91103</td></tr><tr><td>_step</td><td>14</td></tr><tr><td>_runtime</td><td>4198</td></tr><tr><td>_timestamp</td><td>1606107047</td></tr><tr><td>best_val_loss</td><td>2.83597</td></tr><tr><td>best_epoch</td><td>14</td></tr></table>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<h3>Run history:</h3><br/><style>\n","    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n","    </style><table class=\"wandb\">\n","<tr><td>epoch</td><td>▁▁▂▃▃▃▄▅▅▅▆▇▇▇█</td></tr><tr><td>loss</td><td>█▆▅▅▄▄▃▃▃▂▂▂▂▁▁</td></tr><tr><td>accuracy</td><td>▁▃▄▅▆▆▆▇▇▇▇▇███</td></tr><tr><td>val_loss</td><td>█▇▆▆▅▅▄▄▃▃▂▂▂▁▁</td></tr><tr><td>val_accuracy</td><td>▁▂▂▃▄▄▅▆▆▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▂▃▃▃▄▅▅▅▆▇▇▇█</td></tr><tr><td>_runtime</td><td>▁▂▂▃▃▄▄▅▅▆▆▇▇██</td></tr><tr><td>_timestamp</td><td>▁▂▂▃▃▄▄▅▅▆▆▇▇██</td></tr></table><br/>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["Synced 5 W&B file(s), 1 media file(s), 0 artifact file(s) and 1 other file(s)"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["\n","                    <br/>Synced <strong style=\"color:#cdcd00\">MNV2 Pretrain</strong>: <a href=\"https://wandb.ai/burntice/nn_project_tuning/runs/3cdjvxyo\" target=\"_blank\">https://wandb.ai/burntice/nn_project_tuning/runs/3cdjvxyo</a><br/>\n","                "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["...Successfully finished last run (ID:3cdjvxyo). Initializing new run:<br/><br/>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["\n","                Tracking run with wandb version 0.10.11<br/>\n","                Resuming run <strong style=\"color:#cdcd00\">MNV2 Pretrain</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n","                Project page: <a href=\"https://wandb.ai/burntice/nn_project_tuning\" target=\"_blank\">https://wandb.ai/burntice/nn_project_tuning</a><br/>\n","                Run page: <a href=\"https://wandb.ai/burntice/nn_project_tuning/runs/3cdjvxyo\" target=\"_blank\">https://wandb.ai/burntice/nn_project_tuning/runs/3cdjvxyo</a><br/>\n","                Run data is saved locally in <code>/content/wandb/run-20201123_045341-3cdjvxyo</code><br/><br/>\n","            "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Found 9755 validated image filenames.\n","Found 2439 validated image filenames.\n","Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","mobilenetv2_1.00_224 (Functi (None, 1280)              2257984   \n","_________________________________________________________________\n","flatten_1 (Flatten)          (None, 1280)              0         \n","_________________________________________________________________\n","batch_normalization_4 (Batch (None, 1280)              5120      \n","_________________________________________________________________\n","dense_4 (Dense)              (None, 512)               655872    \n","_________________________________________________________________\n","dropout_3 (Dropout)          (None, 512)               0         \n","_________________________________________________________________\n","batch_normalization_5 (Batch (None, 512)               2048      \n","_________________________________________________________________\n","dense_5 (Dense)              (None, 512)               262656    \n","_________________________________________________________________\n","dropout_4 (Dropout)          (None, 512)               0         \n","_________________________________________________________________\n","batch_normalization_6 (Batch (None, 512)               2048      \n","_________________________________________________________________\n","dense_6 (Dense)              (None, 512)               262656    \n","_________________________________________________________________\n","dropout_5 (Dropout)          (None, 512)               0         \n","_________________________________________________________________\n","batch_normalization_7 (Batch (None, 512)               2048      \n","_________________________________________________________________\n","dense_7 (Dense)              (None, 1)                 513       \n","=================================================================\n","Total params: 3,450,945\n","Trainable params: 3,411,201\n","Non-trainable params: 39,744\n","_________________________________________________________________\n","Epoch 1/35\n","153/153 [==============================] - 151s 988ms/step - loss: 2.7151 - accuracy: 0.9299 - val_loss: 2.7327 - val_accuracy: 0.9131\n","Epoch 2/35\n","153/153 [==============================] - 152s 994ms/step - loss: 2.6016 - accuracy: 0.9380 - val_loss: 2.6359 - val_accuracy: 0.9151\n","Epoch 3/35\n","153/153 [==============================] - 152s 993ms/step - loss: 2.4998 - accuracy: 0.9411 - val_loss: 2.5427 - val_accuracy: 0.9159\n","Epoch 4/35\n","153/153 [==============================] - 152s 992ms/step - loss: 2.4032 - accuracy: 0.9444 - val_loss: 2.4548 - val_accuracy: 0.9176\n","Epoch 5/35\n","153/153 [==============================] - 150s 977ms/step - loss: 2.3166 - accuracy: 0.9486 - val_loss: 2.3700 - val_accuracy: 0.9180\n","Epoch 6/35\n","153/153 [==============================] - 151s 987ms/step - loss: 2.2278 - accuracy: 0.9524 - val_loss: 2.2920 - val_accuracy: 0.9200\n","Epoch 7/35\n","153/153 [==============================] - 151s 985ms/step - loss: 2.1416 - accuracy: 0.9542 - val_loss: 2.2160 - val_accuracy: 0.9217\n","Epoch 8/35\n","153/153 [==============================] - 151s 987ms/step - loss: 2.0615 - accuracy: 0.9601 - val_loss: 2.1430 - val_accuracy: 0.9217\n","Epoch 9/35\n","153/153 [==============================] - 151s 987ms/step - loss: 1.9852 - accuracy: 0.9617 - val_loss: 2.0712 - val_accuracy: 0.9229\n","Epoch 10/35\n","153/153 [==============================] - 151s 988ms/step - loss: 1.9027 - accuracy: 0.9673 - val_loss: 2.0045 - val_accuracy: 0.9250\n","Epoch 11/35\n","153/153 [==============================] - 151s 988ms/step - loss: 1.8362 - accuracy: 0.9685 - val_loss: 1.9402 - val_accuracy: 0.9241\n","Epoch 12/35\n","153/153 [==============================] - 152s 995ms/step - loss: 1.7615 - accuracy: 0.9740 - val_loss: 1.8812 - val_accuracy: 0.9254\n","Epoch 13/35\n","153/153 [==============================] - 152s 993ms/step - loss: 1.6942 - accuracy: 0.9761 - val_loss: 1.8223 - val_accuracy: 0.9250\n","Epoch 14/35\n","153/153 [==============================] - 155s 1s/step - loss: 1.6346 - accuracy: 0.9769 - val_loss: 1.7661 - val_accuracy: 0.9258\n","Epoch 15/35\n","153/153 [==============================] - 155s 1s/step - loss: 1.5683 - accuracy: 0.9795 - val_loss: 1.7119 - val_accuracy: 0.9250\n","Epoch 16/35\n","153/153 [==============================] - 154s 1s/step - loss: 1.5109 - accuracy: 0.9808 - val_loss: 1.6622 - val_accuracy: 0.9274\n","Epoch 17/35\n","153/153 [==============================] - 152s 991ms/step - loss: 1.4559 - accuracy: 0.9835 - val_loss: 1.6078 - val_accuracy: 0.9262\n","Epoch 18/35\n","153/153 [==============================] - 153s 1s/step - loss: 1.3961 - accuracy: 0.9854 - val_loss: 1.5643 - val_accuracy: 0.9278\n","Epoch 19/35\n","153/153 [==============================] - 155s 1s/step - loss: 1.3429 - accuracy: 0.9864 - val_loss: 1.5183 - val_accuracy: 0.9258\n","Epoch 20/35\n","153/153 [==============================] - 158s 1s/step - loss: 1.2941 - accuracy: 0.9870 - val_loss: 1.4762 - val_accuracy: 0.9270\n","Epoch 21/35\n","153/153 [==============================] - 159s 1s/step - loss: 1.2428 - accuracy: 0.9903 - val_loss: 1.4357 - val_accuracy: 0.9270\n","Epoch 22/35\n","153/153 [==============================] - 160s 1s/step - loss: 1.1964 - accuracy: 0.9912 - val_loss: 1.3963 - val_accuracy: 0.9282\n","Epoch 23/35\n","153/153 [==============================] - 160s 1s/step - loss: 1.1520 - accuracy: 0.9907 - val_loss: 1.3572 - val_accuracy: 0.9295\n","Epoch 24/35\n","153/153 [==============================] - 163s 1s/step - loss: 1.1043 - accuracy: 0.9936 - val_loss: 1.3193 - val_accuracy: 0.9311\n","Epoch 25/35\n","153/153 [==============================] - 162s 1s/step - loss: 1.0659 - accuracy: 0.9929 - val_loss: 1.2877 - val_accuracy: 0.9274\n","Epoch 26/35\n","153/153 [==============================] - 164s 1s/step - loss: 1.0265 - accuracy: 0.9927 - val_loss: 1.2522 - val_accuracy: 0.9307\n","Epoch 27/35\n","153/153 [==============================] - 164s 1s/step - loss: 0.9854 - accuracy: 0.9944 - val_loss: 1.2195 - val_accuracy: 0.9291\n","Epoch 28/35\n","153/153 [==============================] - 164s 1s/step - loss: 0.9454 - accuracy: 0.9965 - val_loss: 1.1911 - val_accuracy: 0.9291\n","Epoch 29/35\n","153/153 [==============================] - 164s 1s/step - loss: 0.9103 - accuracy: 0.9965 - val_loss: 1.1610 - val_accuracy: 0.9299\n","Epoch 30/35\n","153/153 [==============================] - 161s 1s/step - loss: 0.8745 - accuracy: 0.9963 - val_loss: 1.1365 - val_accuracy: 0.9303\n","Epoch 31/35\n","153/153 [==============================] - 155s 1s/step - loss: 0.8435 - accuracy: 0.9965 - val_loss: 1.1040 - val_accuracy: 0.9299\n","Epoch 32/35\n","153/153 [==============================] - 155s 1s/step - loss: 0.8153 - accuracy: 0.9949 - val_loss: 1.0796 - val_accuracy: 0.9303\n","Epoch 33/35\n","153/153 [==============================] - 152s 996ms/step - loss: 0.7821 - accuracy: 0.9964 - val_loss: 1.0513 - val_accuracy: 0.9307\n","Epoch 34/35\n","153/153 [==============================] - 153s 999ms/step - loss: 0.7514 - accuracy: 0.9960 - val_loss: 1.0226 - val_accuracy: 0.9303\n","Epoch 35/35\n","153/153 [==============================] - 153s 997ms/step - loss: 0.7237 - accuracy: 0.9974 - val_loss: 0.9972 - val_accuracy: 0.9287\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"awQnqIQh9pLL"},"source":[""],"execution_count":null,"outputs":[]}]}