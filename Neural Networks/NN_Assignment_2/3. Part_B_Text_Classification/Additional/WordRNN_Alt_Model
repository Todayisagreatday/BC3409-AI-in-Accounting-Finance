{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"WordRNN_Alt_Model","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyN6xnEwbb44FWDNaalH9v17"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"0699027f49a14eeab381b504c59de43c":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","state":{"_view_name":"VBoxView","_dom_classes":[],"_model_name":"VBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_bfe88a9046064ed399c0c989b78a66d3","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_e44bbd977f0a42a79c4e622aeba592fd","IPY_MODEL_7779da88063d46a2942429ff3352b7c1"]}},"bfe88a9046064ed399c0c989b78a66d3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"e44bbd977f0a42a79c4e622aeba592fd":{"model_module":"@jupyter-widgets/controls","model_name":"LabelModel","state":{"_view_name":"LabelView","style":"IPY_MODEL_a75a12a6feac4bc48d25945da239e38d","_dom_classes":[],"description":"","_model_name":"LabelModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 20.99MB of 20.99MB uploaded (0.00MB deduped)\r","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_56c4105297464e0d941f639e970a6c9b"}},"7779da88063d46a2942429ff3352b7c1":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_b4c5b2e735744519990668c892c29c29","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_4243d976834c401aa89a54d84cf3ff71"}},"a75a12a6feac4bc48d25945da239e38d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"56c4105297464e0d941f639e970a6c9b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"b4c5b2e735744519990668c892c29c29":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"4243d976834c401aa89a54d84cf3ff71":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"mnntH9ltL5cZ"},"source":["# Mount Drive"]},{"cell_type":"code","metadata":{"id":"-M48O3QXt0dc","executionInfo":{"status":"ok","timestamp":1605223949090,"user_tz":-480,"elapsed":812,"user":{"displayName":"Kenneth Ng","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKwZnZ2dHsOvtWnGFQksMtsfZc2QK_Fv86edRayg=s64","userId":"07556015887030206568"}},"outputId":"ca9d99e4-6918-414e-a49c-a163474835b9","colab":{"base_uri":"https://localhost:8080/"}},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"qZ9y3nOXL7ix"},"source":["# Install Libraries"]},{"cell_type":"code","metadata":{"id":"Z2gdCDhmybWe","executionInfo":{"status":"ok","timestamp":1605223952766,"user_tz":-480,"elapsed":2812,"user":{"displayName":"Kenneth Ng","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKwZnZ2dHsOvtWnGFQksMtsfZc2QK_Fv86edRayg=s64","userId":"07556015887030206568"}}},"source":["!pip install wandb -qqq"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"aUnW2mpR502Y","executionInfo":{"status":"ok","timestamp":1605223952767,"user_tz":-480,"elapsed":2615,"user":{"displayName":"Kenneth Ng","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKwZnZ2dHsOvtWnGFQksMtsfZc2QK_Fv86edRayg=s64","userId":"07556015887030206568"}},"outputId":"1d5cb12b-99ad-4010-9449-e895c665ebef","colab":{"base_uri":"https://localhost:8080/"}},"source":["import nltk\n","nltk.download('punkt')"],"execution_count":8,"outputs":[{"output_type":"stream","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"markdown","metadata":{"id":"ob3J7_w6L9wL"},"source":["# Run Model"]},{"cell_type":"code","metadata":{"id":"YV-vgOrwzbhT","executionInfo":{"status":"ok","timestamp":1605223952769,"user_tz":-480,"elapsed":1624,"user":{"displayName":"Kenneth Ng","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKwZnZ2dHsOvtWnGFQksMtsfZc2QK_Fv86edRayg=s64","userId":"07556015887030206568"}}},"source":["# Preprocessing Functions\n","def clean_str(text):\n","    text = re.sub(r\"[^A-Za-z0-9(),!?\\'\\`\\\"]\", \" \", text)\n","    text = re.sub(r\"\\s{2,}\", \" \", text)\n","    text = text.strip().lower()\n","\n","    return text\n","\n","\n","def build_word_dict(contents):\n","    words = list()\n","    for content in contents:\n","        for word in word_tokenize(clean_str(content)):\n","            words.append(word)\n","\n","    word_counter = collections.Counter(words).most_common()\n","    word_dict = dict()\n","    word_dict[\"<pad>\"] = 0\n","    word_dict[\"<unk>\"] = 1\n","    word_dict[\"<eos>\"] = 2\n","    for word, _ in word_counter:\n","        word_dict[word] = len(word_dict)\n","    return word_dict\n","\n","\n","def preprocess(contents, word_dict, document_max_len):\n","    x = list(map(lambda d: word_tokenize(clean_str(d)), contents))\n","    x = list(map(lambda d: list(map(lambda w: word_dict.get(w, word_dict[\"<unk>\"]), d)), x))\n","    x = list(map(lambda d: d + [word_dict[\"<eos>\"]], x))\n","    x = list(map(lambda d: d[:document_max_len], x))\n","    x = list(map(lambda d: d + (document_max_len - len(d)) * [word_dict[\"<pad>\"]], x))\n","    return x\n","\n","\n","def read_data_words():\n","    x_train, y_train, x_test, y_test = [], [], [], []\n","    cop = re.compile(\"[^a-z^A-Z^0-9^,^.^' ']\")\n","    with open('/content/drive/My Drive/Neural Networks/NN_Assignment_2/Part_B_Text_Classification/train_medium.csv', encoding='utf-8') as filex:\n","        reader = csv.reader(filex)\n","        for row in reader:\n","            data = cop.sub(\"\", row[1])\n","            x_train.append(data)\n","            y_train.append(int(row[0]))\n","\n","    with open('/content/drive/My Drive/Neural Networks/NN_Assignment_2/Part_B_Text_Classification/test_medium.csv', encoding='utf-8') as filex:\n","        reader = csv.reader(filex)\n","        for row in reader:\n","            data = cop.sub(\"\", row[1])\n","            x_test.append(data)\n","            y_test.append(int(row[0]))\n","\n","    word_dict = build_word_dict(x_train+x_test)\n","    x_train = preprocess(x_train, word_dict, 100)\n","    y_train = np.array(y_train)\n","    x_test = preprocess(x_test, word_dict, 100)\n","    y_test = np.array(y_test)\n","\n","    x_train = [x[:100] for x in x_train]\n","    x_test = [x[:100] for x in x_test]\n","    x_train = tf.constant(x_train, dtype=tf.int64)\n","    y_train = tf.constant(y_train, dtype=tf.int64)\n","    x_test = tf.constant(x_test, dtype=tf.int64)\n","    y_test = tf.constant(y_test, dtype=tf.int64)\n","\n","    vocab_size = tf.get_static_value(tf.reduce_max(x_train))\n","    vocab_size = max(vocab_size, tf.get_static_value(tf.reduce_max(x_test))) + 1\n","    return x_train, y_train, x_test, y_test, vocab_size"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"CnWPz07jyrXz","executionInfo":{"status":"ok","timestamp":1605224267243,"user_tz":-480,"elapsed":300529,"user":{"displayName":"Kenneth Ng","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKwZnZ2dHsOvtWnGFQksMtsfZc2QK_Fv86edRayg=s64","userId":"07556015887030206568"}},"outputId":"349e6b4e-3cb0-49c6-eb1b-7a75d5abb34f","colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["0699027f49a14eeab381b504c59de43c","bfe88a9046064ed399c0c989b78a66d3","e44bbd977f0a42a79c4e622aeba592fd","7779da88063d46a2942429ff3352b7c1","a75a12a6feac4bc48d25945da239e38d","56c4105297464e0d941f639e970a6c9b","b4c5b2e735744519990668c892c29c29","4243d976834c401aa89a54d84cf3ff71"]}},"source":["import wandb\n","from wandb.keras import WandbCallback\n","import collections\n","import numpy as np\n","import tensorflow as tf\n","from nltk.tokenize import word_tokenize\n","from tensorflow.keras import Model, layers, models\n","import csv\n","import re\n","\n","# Hyperparameters\n","defaults = {\n","    'embedding_size' : 50,\n","    'hidden_size' : 20,\n","    'batch_size' : 128,\n","    'epochs' : 100,\n","    'lr' : 0.01,\n","    'Dropout' : 'Yes'\n","}\n","\n","# Initiate wandb\n","wandb.init(config=defaults, resume=True, name='WordRNN Q4b D02-SC', project='NNA2 Part B Redo', notes='sanity check')\n","config = wandb.config\n","\n","# Fix lucky seed!\n","seed = 7\n","tf.random.set_seed(seed)\n","\n","# Train test split\n","x_train, y_train, x_test, y_test, vocab_size = read_data_words()\n","\n","# Use `tf.data` to batch and shuffle the dataset:\n","train_ds = tf.data.Dataset.from_tensor_slices(\n","    (x_train, y_train)).shuffle(10000).batch(config.batch_size)\n","test_ds = tf.data.Dataset.from_tensor_slices((x_test, y_test)).batch(config.batch_size)\n","\n","# Define model\n","tf.keras.backend.set_floatx('float32')\n","model = models.Sequential()\n","model.add(layers.Embedding(vocab_size, config.embedding_size, input_length=100))\n","model.add(layers.Dropout(0.5))\n","model.add(layers.RNN(layers.GRUCell(config.hidden_size), unroll=True))\n","model.add(layers.Dropout(0.5))\n","model.add(layers.Dense(15, activation=None))\n","model.summary()\n","\n","# Choose optimizer and loss function\n","opt = tf.keras.optimizers.Adam(learning_rate=config.lr)\n","loss_object = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True)\n","\n","# Compile model\n","model.compile(\n","    optimizer=opt,\n","    loss=loss_object,\n","    metrics=['accuracy'],\n",")\n","\n","# Train model\n","model.fit(\n","    train_ds,\n","    validation_data=test_ds,\n","    epochs=config.epochs,\n","    callbacks=[WandbCallback()],\n","    )"],"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/html":["Finishing last run (ID:ekw08x9z) before initializing another..."],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<br/>Waiting for W&B process to finish, PID 347<br/>Program ended successfully."],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0699027f49a14eeab381b504c59de43c","version_minor":0,"version_major":2},"text/plain":["VBox(children=(Label(value=' 20.28MB of 20.28MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.…"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["Find user logs for this run at: <code>/content/wandb/run-20201112_232446-ekw08x9z/logs/debug.log</code>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["Find internal logs for this run at: <code>/content/wandb/run-20201112_232446-ekw08x9z/logs/debug-internal.log</code>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<h3>Run summary:</h3><br/><style>\n","    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n","    </style><table class=\"wandb\">\n","<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.10285</td></tr><tr><td>accuracy</td><td>0.96964</td></tr><tr><td>val_loss</td><td>0.71541</td></tr><tr><td>val_accuracy</td><td>0.89571</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>_runtime</td><td>303</td></tr><tr><td>_timestamp</td><td>1605223789</td></tr><tr><td>best_val_loss</td><td>0.45475</td></tr><tr><td>best_epoch</td><td>19</td></tr></table>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<h3>Run history:</h3><br/><style>\n","    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n","    </style><table class=\"wandb\">\n","<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>████▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>accuracy</td><td>▁▁▁▁▆▇▇▇▇███████████████████████████████</td></tr><tr><td>val_loss</td><td>███▅▂▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▂▁▁▁▁▁▁▂▁▂▂▂▂▂▁▂▂▂▂</td></tr><tr><td>val_accuracy</td><td>▁▁▁▃▇▇██████████████████████████████████</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["Synced 5 W&B file(s), 1 media file(s), 0 artifact file(s) and 1 other file(s)"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["\n","                    <br/>Synced <strong style=\"color:#cdcd00\">WordRNN Q4b DX2</strong>: <a href=\"https://wandb.ai/todayisagreatday/NNA2%20Part%20B%20Redo/runs/ekw08x9z\" target=\"_blank\">https://wandb.ai/todayisagreatday/NNA2%20Part%20B%20Redo/runs/ekw08x9z</a><br/>\n","                "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["...Successfully finished last run (ID:ekw08x9z). Initializing new run:<br/><br/>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["\n","                Tracking run with wandb version 0.10.10<br/>\n","                Resuming run <strong style=\"color:#cdcd00\">WordRNN Q4b DX2-SC</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n","                Project page: <a href=\"https://wandb.ai/todayisagreatday/NNA2%20Part%20B%20Redo\" target=\"_blank\">https://wandb.ai/todayisagreatday/NNA2%20Part%20B%20Redo</a><br/>\n","                Run page: <a href=\"https://wandb.ai/todayisagreatday/NNA2%20Part%20B%20Redo/runs/ekw08x9z\" target=\"_blank\">https://wandb.ai/todayisagreatday/NNA2%20Part%20B%20Redo/runs/ekw08x9z</a><br/>\n","                Run data is saved locally in <code>/content/wandb/run-20201112_233247-ekw08x9z</code><br/><br/>\n","            "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_1 (Embedding)      (None, 100, 50)           1764350   \n","_________________________________________________________________\n","dropout_2 (Dropout)          (None, 100, 50)           0         \n","_________________________________________________________________\n","rnn_1 (RNN)                  (None, 20)                4320      \n","_________________________________________________________________\n","dropout_3 (Dropout)          (None, 20)                0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 15)                315       \n","=================================================================\n","Total params: 1,768,985\n","Trainable params: 1,768,985\n","Non-trainable params: 0\n","_________________________________________________________________\n","Epoch 1/100\n","44/44 [==============================] - 5s 105ms/step - loss: 2.6812 - accuracy: 0.0671 - val_loss: 2.6493 - val_accuracy: 0.0714\n","Epoch 2/100\n","44/44 [==============================] - 3s 59ms/step - loss: 2.6614 - accuracy: 0.0684 - val_loss: 2.6450 - val_accuracy: 0.0714\n","Epoch 3/100\n","44/44 [==============================] - 3s 66ms/step - loss: 2.6509 - accuracy: 0.0720 - val_loss: 2.6446 - val_accuracy: 0.0714\n","Epoch 4/100\n","44/44 [==============================] - 2s 56ms/step - loss: 2.6489 - accuracy: 0.0727 - val_loss: 2.6422 - val_accuracy: 0.0714\n","Epoch 5/100\n","44/44 [==============================] - 3s 61ms/step - loss: 2.6483 - accuracy: 0.0693 - val_loss: 2.6430 - val_accuracy: 0.0714\n","Epoch 6/100\n","44/44 [==============================] - 3s 61ms/step - loss: 2.6453 - accuracy: 0.0691 - val_loss: 2.6442 - val_accuracy: 0.0700\n","Epoch 7/100\n","44/44 [==============================] - 3s 61ms/step - loss: 2.6452 - accuracy: 0.0639 - val_loss: 2.6375 - val_accuracy: 0.0800\n","Epoch 8/100\n","44/44 [==============================] - 3s 58ms/step - loss: 2.5000 - accuracy: 0.1211 - val_loss: 1.8592 - val_accuracy: 0.3471\n","Epoch 9/100\n","44/44 [==============================] - 3s 59ms/step - loss: 1.6451 - accuracy: 0.3768 - val_loss: 1.1464 - val_accuracy: 0.6086\n","Epoch 10/100\n","44/44 [==============================] - 3s 60ms/step - loss: 1.1760 - accuracy: 0.5511 - val_loss: 0.8399 - val_accuracy: 0.7057\n","Epoch 11/100\n","44/44 [==============================] - 3s 61ms/step - loss: 0.8839 - accuracy: 0.6836 - val_loss: 0.6816 - val_accuracy: 0.7829\n","Epoch 12/100\n","44/44 [==============================] - 3s 58ms/step - loss: 0.6889 - accuracy: 0.7591 - val_loss: 0.5401 - val_accuracy: 0.8057\n","Epoch 13/100\n","44/44 [==============================] - 3s 62ms/step - loss: 0.6250 - accuracy: 0.7855 - val_loss: 0.5252 - val_accuracy: 0.8114\n","Epoch 14/100\n","44/44 [==============================] - 3s 59ms/step - loss: 0.5253 - accuracy: 0.8130 - val_loss: 0.5318 - val_accuracy: 0.8086\n","Epoch 15/100\n","44/44 [==============================] - 3s 64ms/step - loss: 0.4692 - accuracy: 0.8327 - val_loss: 0.5754 - val_accuracy: 0.8100\n","Epoch 16/100\n","44/44 [==============================] - 3s 68ms/step - loss: 0.4327 - accuracy: 0.8409 - val_loss: 0.5509 - val_accuracy: 0.8300\n","Epoch 17/100\n","44/44 [==============================] - 3s 62ms/step - loss: 0.3789 - accuracy: 0.8577 - val_loss: 0.5693 - val_accuracy: 0.8386\n","Epoch 18/100\n","44/44 [==============================] - 3s 58ms/step - loss: 0.3555 - accuracy: 0.8593 - val_loss: 0.5983 - val_accuracy: 0.8486\n","Epoch 19/100\n","44/44 [==============================] - 3s 61ms/step - loss: 0.3368 - accuracy: 0.8725 - val_loss: 0.5987 - val_accuracy: 0.8329\n","Epoch 20/100\n","44/44 [==============================] - 3s 57ms/step - loss: 0.3389 - accuracy: 0.8720 - val_loss: 0.5584 - val_accuracy: 0.8471\n","Epoch 21/100\n","44/44 [==============================] - 3s 66ms/step - loss: 0.3120 - accuracy: 0.8777 - val_loss: 0.5994 - val_accuracy: 0.8586\n","Epoch 22/100\n","44/44 [==============================] - 2s 56ms/step - loss: 0.3073 - accuracy: 0.8882 - val_loss: 0.5353 - val_accuracy: 0.8643\n","Epoch 23/100\n","44/44 [==============================] - 3s 65ms/step - loss: 0.3016 - accuracy: 0.8938 - val_loss: 0.5567 - val_accuracy: 0.8614\n","Epoch 24/100\n","44/44 [==============================] - 3s 60ms/step - loss: 0.2618 - accuracy: 0.9050 - val_loss: 0.5980 - val_accuracy: 0.8543\n","Epoch 25/100\n","44/44 [==============================] - 3s 57ms/step - loss: 0.2774 - accuracy: 0.9062 - val_loss: 0.6006 - val_accuracy: 0.8629\n","Epoch 26/100\n","44/44 [==============================] - 2s 57ms/step - loss: 0.2467 - accuracy: 0.9161 - val_loss: 0.5416 - val_accuracy: 0.8729\n","Epoch 27/100\n","44/44 [==============================] - 3s 61ms/step - loss: 0.2138 - accuracy: 0.9318 - val_loss: 0.6232 - val_accuracy: 0.8600\n","Epoch 28/100\n","44/44 [==============================] - 3s 68ms/step - loss: 0.2083 - accuracy: 0.9312 - val_loss: 0.6014 - val_accuracy: 0.8700\n","Epoch 29/100\n","44/44 [==============================] - 2s 56ms/step - loss: 0.2148 - accuracy: 0.9318 - val_loss: 0.5117 - val_accuracy: 0.8814\n","Epoch 30/100\n","44/44 [==============================] - 3s 62ms/step - loss: 0.1899 - accuracy: 0.9393 - val_loss: 0.5486 - val_accuracy: 0.8771\n","Epoch 31/100\n","44/44 [==============================] - 3s 65ms/step - loss: 0.1856 - accuracy: 0.9471 - val_loss: 0.6134 - val_accuracy: 0.8843\n","Epoch 32/100\n","44/44 [==============================] - 3s 60ms/step - loss: 0.1668 - accuracy: 0.9513 - val_loss: 0.6334 - val_accuracy: 0.8786\n","Epoch 33/100\n","44/44 [==============================] - 3s 61ms/step - loss: 0.1636 - accuracy: 0.9486 - val_loss: 0.5531 - val_accuracy: 0.8843\n","Epoch 34/100\n","44/44 [==============================] - 3s 58ms/step - loss: 0.1734 - accuracy: 0.9450 - val_loss: 0.6267 - val_accuracy: 0.8857\n","Epoch 35/100\n","44/44 [==============================] - 3s 62ms/step - loss: 0.1453 - accuracy: 0.9527 - val_loss: 0.6311 - val_accuracy: 0.8814\n","Epoch 36/100\n","44/44 [==============================] - 3s 61ms/step - loss: 0.1290 - accuracy: 0.9589 - val_loss: 0.5860 - val_accuracy: 0.8814\n","Epoch 37/100\n","44/44 [==============================] - 3s 65ms/step - loss: 0.1462 - accuracy: 0.9575 - val_loss: 0.7062 - val_accuracy: 0.8700\n","Epoch 38/100\n","44/44 [==============================] - 3s 61ms/step - loss: 0.1630 - accuracy: 0.9491 - val_loss: 0.5546 - val_accuracy: 0.8814\n","Epoch 39/100\n","44/44 [==============================] - 3s 64ms/step - loss: 0.1452 - accuracy: 0.9555 - val_loss: 0.6089 - val_accuracy: 0.8929\n","Epoch 40/100\n","44/44 [==============================] - 3s 65ms/step - loss: 0.1478 - accuracy: 0.9546 - val_loss: 0.6068 - val_accuracy: 0.8857\n","Epoch 41/100\n","44/44 [==============================] - 3s 61ms/step - loss: 0.1483 - accuracy: 0.9580 - val_loss: 0.5611 - val_accuracy: 0.8886\n","Epoch 42/100\n","44/44 [==============================] - 3s 64ms/step - loss: 0.1644 - accuracy: 0.9507 - val_loss: 0.5590 - val_accuracy: 0.9043\n","Epoch 43/100\n","44/44 [==============================] - 3s 68ms/step - loss: 0.1601 - accuracy: 0.9548 - val_loss: 0.5978 - val_accuracy: 0.8886\n","Epoch 44/100\n","44/44 [==============================] - 3s 65ms/step - loss: 0.1288 - accuracy: 0.9607 - val_loss: 0.6082 - val_accuracy: 0.8914\n","Epoch 45/100\n","44/44 [==============================] - 3s 58ms/step - loss: 0.1255 - accuracy: 0.9579 - val_loss: 0.6052 - val_accuracy: 0.8971\n","Epoch 46/100\n","44/44 [==============================] - 3s 60ms/step - loss: 0.1333 - accuracy: 0.9588 - val_loss: 0.5717 - val_accuracy: 0.8943\n","Epoch 47/100\n","44/44 [==============================] - 3s 59ms/step - loss: 0.1296 - accuracy: 0.9593 - val_loss: 0.6269 - val_accuracy: 0.8943\n","Epoch 48/100\n","44/44 [==============================] - 2s 57ms/step - loss: 0.1332 - accuracy: 0.9584 - val_loss: 0.5999 - val_accuracy: 0.8871\n","Epoch 49/100\n","44/44 [==============================] - 3s 62ms/step - loss: 0.1219 - accuracy: 0.9620 - val_loss: 0.5897 - val_accuracy: 0.8914\n","Epoch 50/100\n","44/44 [==============================] - 3s 57ms/step - loss: 0.1176 - accuracy: 0.9639 - val_loss: 0.6664 - val_accuracy: 0.8843\n","Epoch 51/100\n","44/44 [==============================] - 3s 62ms/step - loss: 0.1327 - accuracy: 0.9655 - val_loss: 0.5596 - val_accuracy: 0.8986\n","Epoch 52/100\n","44/44 [==============================] - 3s 62ms/step - loss: 0.1249 - accuracy: 0.9607 - val_loss: 0.5761 - val_accuracy: 0.8971\n","Epoch 53/100\n","44/44 [==============================] - 3s 59ms/step - loss: 0.1142 - accuracy: 0.9673 - val_loss: 0.5976 - val_accuracy: 0.8971\n","Epoch 54/100\n","44/44 [==============================] - 3s 60ms/step - loss: 0.1170 - accuracy: 0.9636 - val_loss: 0.7229 - val_accuracy: 0.8857\n","Epoch 55/100\n","44/44 [==============================] - 3s 59ms/step - loss: 0.1056 - accuracy: 0.9673 - val_loss: 0.6392 - val_accuracy: 0.8857\n","Epoch 56/100\n","44/44 [==============================] - 3s 59ms/step - loss: 0.1118 - accuracy: 0.9664 - val_loss: 0.6257 - val_accuracy: 0.8857\n","Epoch 57/100\n","44/44 [==============================] - 3s 60ms/step - loss: 0.1234 - accuracy: 0.9689 - val_loss: 0.6240 - val_accuracy: 0.8929\n","Epoch 58/100\n","44/44 [==============================] - 3s 57ms/step - loss: 0.1228 - accuracy: 0.9648 - val_loss: 0.6596 - val_accuracy: 0.8800\n","Epoch 59/100\n","44/44 [==============================] - 3s 60ms/step - loss: 0.1101 - accuracy: 0.9670 - val_loss: 0.5678 - val_accuracy: 0.8914\n","Epoch 60/100\n","44/44 [==============================] - 3s 64ms/step - loss: 0.1241 - accuracy: 0.9620 - val_loss: 0.5897 - val_accuracy: 0.8943\n","Epoch 61/100\n","44/44 [==============================] - 3s 60ms/step - loss: 0.1215 - accuracy: 0.9634 - val_loss: 0.6358 - val_accuracy: 0.8843\n","Epoch 62/100\n","44/44 [==============================] - 3s 60ms/step - loss: 0.1091 - accuracy: 0.9655 - val_loss: 0.6571 - val_accuracy: 0.8929\n","Epoch 63/100\n","44/44 [==============================] - 3s 59ms/step - loss: 0.0930 - accuracy: 0.9682 - val_loss: 0.6183 - val_accuracy: 0.8914\n","Epoch 64/100\n","44/44 [==============================] - 3s 59ms/step - loss: 0.0970 - accuracy: 0.9705 - val_loss: 0.5955 - val_accuracy: 0.8986\n","Epoch 65/100\n","44/44 [==============================] - 3s 66ms/step - loss: 0.1295 - accuracy: 0.9596 - val_loss: 0.6101 - val_accuracy: 0.8929\n","Epoch 66/100\n","44/44 [==============================] - 3s 64ms/step - loss: 0.1212 - accuracy: 0.9664 - val_loss: 0.6536 - val_accuracy: 0.8957\n","Epoch 67/100\n","44/44 [==============================] - 3s 62ms/step - loss: 0.1163 - accuracy: 0.9664 - val_loss: 0.7081 - val_accuracy: 0.8886\n","Epoch 68/100\n","44/44 [==============================] - 3s 58ms/step - loss: 0.0948 - accuracy: 0.9705 - val_loss: 0.6673 - val_accuracy: 0.9000\n","Epoch 69/100\n","44/44 [==============================] - 3s 59ms/step - loss: 0.1056 - accuracy: 0.9698 - val_loss: 0.7840 - val_accuracy: 0.8814\n","Epoch 70/100\n","44/44 [==============================] - 3s 59ms/step - loss: 0.1159 - accuracy: 0.9680 - val_loss: 0.6938 - val_accuracy: 0.8871\n","Epoch 71/100\n","44/44 [==============================] - 3s 62ms/step - loss: 0.0859 - accuracy: 0.9743 - val_loss: 0.6045 - val_accuracy: 0.8971\n","Epoch 72/100\n","44/44 [==============================] - 3s 64ms/step - loss: 0.1038 - accuracy: 0.9693 - val_loss: 0.6173 - val_accuracy: 0.8886\n","Epoch 73/100\n","44/44 [==============================] - 3s 65ms/step - loss: 0.1092 - accuracy: 0.9641 - val_loss: 0.5613 - val_accuracy: 0.9029\n","Epoch 74/100\n","44/44 [==============================] - 3s 66ms/step - loss: 0.0846 - accuracy: 0.9741 - val_loss: 0.5939 - val_accuracy: 0.9014\n","Epoch 75/100\n","44/44 [==============================] - 3s 60ms/step - loss: 0.0877 - accuracy: 0.9718 - val_loss: 0.6261 - val_accuracy: 0.9000\n","Epoch 76/100\n","44/44 [==============================] - 3s 63ms/step - loss: 0.0714 - accuracy: 0.9768 - val_loss: 0.6448 - val_accuracy: 0.9043\n","Epoch 77/100\n","44/44 [==============================] - 3s 59ms/step - loss: 0.0810 - accuracy: 0.9716 - val_loss: 0.5943 - val_accuracy: 0.9029\n","Epoch 78/100\n","44/44 [==============================] - 3s 57ms/step - loss: 0.1049 - accuracy: 0.9679 - val_loss: 0.6699 - val_accuracy: 0.8971\n","Epoch 79/100\n","44/44 [==============================] - 3s 63ms/step - loss: 0.0934 - accuracy: 0.9737 - val_loss: 0.5917 - val_accuracy: 0.9029\n","Epoch 80/100\n","44/44 [==============================] - 3s 57ms/step - loss: 0.1002 - accuracy: 0.9691 - val_loss: 0.6455 - val_accuracy: 0.8871\n","Epoch 81/100\n","44/44 [==============================] - 3s 65ms/step - loss: 0.0900 - accuracy: 0.9737 - val_loss: 0.6695 - val_accuracy: 0.9014\n","Epoch 82/100\n","44/44 [==============================] - 3s 63ms/step - loss: 0.0963 - accuracy: 0.9698 - val_loss: 0.6770 - val_accuracy: 0.8957\n","Epoch 83/100\n","44/44 [==============================] - 2s 57ms/step - loss: 0.1081 - accuracy: 0.9729 - val_loss: 0.6421 - val_accuracy: 0.8957\n","Epoch 84/100\n","44/44 [==============================] - 3s 58ms/step - loss: 0.1013 - accuracy: 0.9712 - val_loss: 0.6326 - val_accuracy: 0.8971\n","Epoch 85/100\n","44/44 [==============================] - 3s 57ms/step - loss: 0.1086 - accuracy: 0.9679 - val_loss: 0.7558 - val_accuracy: 0.8743\n","Epoch 86/100\n","44/44 [==============================] - 3s 57ms/step - loss: 0.0925 - accuracy: 0.9718 - val_loss: 0.6724 - val_accuracy: 0.8929\n","Epoch 87/100\n","44/44 [==============================] - 3s 60ms/step - loss: 0.0833 - accuracy: 0.9750 - val_loss: 0.7096 - val_accuracy: 0.8814\n","Epoch 88/100\n","44/44 [==============================] - 2s 56ms/step - loss: 0.0858 - accuracy: 0.9704 - val_loss: 0.7805 - val_accuracy: 0.8857\n","Epoch 89/100\n","44/44 [==============================] - 3s 61ms/step - loss: 0.1023 - accuracy: 0.9727 - val_loss: 0.7155 - val_accuracy: 0.8886\n","Epoch 90/100\n","44/44 [==============================] - 2s 57ms/step - loss: 0.0854 - accuracy: 0.9729 - val_loss: 0.7097 - val_accuracy: 0.8957\n","Epoch 91/100\n","44/44 [==============================] - 3s 58ms/step - loss: 0.1060 - accuracy: 0.9659 - val_loss: 0.6085 - val_accuracy: 0.9000\n","Epoch 92/100\n","44/44 [==============================] - 2s 56ms/step - loss: 0.0954 - accuracy: 0.9721 - val_loss: 0.7245 - val_accuracy: 0.8957\n","Epoch 93/100\n","44/44 [==============================] - 3s 60ms/step - loss: 0.1032 - accuracy: 0.9725 - val_loss: 0.7225 - val_accuracy: 0.8929\n","Epoch 94/100\n","44/44 [==============================] - 2s 57ms/step - loss: 0.0940 - accuracy: 0.9680 - val_loss: 0.6722 - val_accuracy: 0.8971\n","Epoch 95/100\n","44/44 [==============================] - 2s 57ms/step - loss: 0.0935 - accuracy: 0.9700 - val_loss: 0.8338 - val_accuracy: 0.8986\n","Epoch 96/100\n","44/44 [==============================] - 3s 60ms/step - loss: 0.0974 - accuracy: 0.9730 - val_loss: 0.7294 - val_accuracy: 0.8943\n","Epoch 97/100\n","44/44 [==============================] - 3s 61ms/step - loss: 0.1022 - accuracy: 0.9684 - val_loss: 0.7180 - val_accuracy: 0.8900\n","Epoch 98/100\n","44/44 [==============================] - 2s 57ms/step - loss: 0.0805 - accuracy: 0.9745 - val_loss: 0.7081 - val_accuracy: 0.8900\n","Epoch 99/100\n","44/44 [==============================] - 3s 58ms/step - loss: 0.1017 - accuracy: 0.9721 - val_loss: 0.8587 - val_accuracy: 0.8800\n","Epoch 100/100\n","44/44 [==============================] - 3s 61ms/step - loss: 0.0869 - accuracy: 0.9721 - val_loss: 0.8429 - val_accuracy: 0.8800\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7fc0af1f7518>"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"id":"10s9udsJChxm"},"source":[""],"execution_count":null,"outputs":[]}]}