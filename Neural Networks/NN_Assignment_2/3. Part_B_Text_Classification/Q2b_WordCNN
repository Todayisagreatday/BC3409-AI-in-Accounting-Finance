{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Q2b_WordCNN","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMJ4VfG6hzrnVgu2KsKpALm"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"17KidFS5KMx6"},"source":["# Mount Drive"]},{"cell_type":"code","metadata":{"id":"-M48O3QXt0dc","executionInfo":{"status":"ok","timestamp":1604854704637,"user_tz":-480,"elapsed":31559,"user":{"displayName":"Kenneth Ng","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKwZnZ2dHsOvtWnGFQksMtsfZc2QK_Fv86edRayg=s64","userId":"07556015887030206568"}},"outputId":"af7cd251-6e00-4407-ef03-142377f64e6a","colab":{"base_uri":"https://localhost:8080/"}},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"yhbj3MMNKYRw"},"source":["# Install libraries"]},{"cell_type":"code","metadata":{"id":"Z2gdCDhmybWe","executionInfo":{"status":"ok","timestamp":1604854713521,"user_tz":-480,"elapsed":40432,"user":{"displayName":"Kenneth Ng","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKwZnZ2dHsOvtWnGFQksMtsfZc2QK_Fv86edRayg=s64","userId":"07556015887030206568"}},"outputId":"dbc3a4db-fe6c-4d89-e538-4a5905420d05","colab":{"base_uri":"https://localhost:8080/"}},"source":["!pip install wandb -qqq"],"execution_count":null,"outputs":[{"output_type":"stream","text":["\u001b[K     |████████████████████████████████| 1.8MB 4.4MB/s \n","\u001b[K     |████████████████████████████████| 102kB 12.4MB/s \n","\u001b[K     |████████████████████████████████| 102kB 10.9MB/s \n","\u001b[K     |████████████████████████████████| 133kB 24.5MB/s \n","\u001b[K     |████████████████████████████████| 163kB 24.5MB/s \n","\u001b[K     |████████████████████████████████| 71kB 10.1MB/s \n","\u001b[?25h  Building wheel for subprocess32 (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for watchdog (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for pathtools (setup.py) ... \u001b[?25l\u001b[?25hdone\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"aUnW2mpR502Y","executionInfo":{"status":"ok","timestamp":1604854715562,"user_tz":-480,"elapsed":42467,"user":{"displayName":"Kenneth Ng","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKwZnZ2dHsOvtWnGFQksMtsfZc2QK_Fv86edRayg=s64","userId":"07556015887030206568"}},"outputId":"2a726dea-2985-4d88-e68a-0cecf20e84d6","colab":{"base_uri":"https://localhost:8080/"}},"source":["import nltk\n","nltk.download('punkt')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"oCxkq4GpKaU5"},"source":["# Run Model"]},{"cell_type":"code","metadata":{"id":"YV-vgOrwzbhT"},"source":["# Preprocessing Functions\n","def clean_str(text):\n","    text = re.sub(r\"[^A-Za-z0-9(),!?\\'\\`\\\"]\", \" \", text)\n","    text = re.sub(r\"\\s{2,}\", \" \", text)\n","    text = text.strip().lower()\n","\n","    return text\n","\n","\n","def build_word_dict(contents):\n","    words = list()\n","    for content in contents:\n","        for word in word_tokenize(clean_str(content)):\n","            words.append(word)\n","\n","    word_counter = collections.Counter(words).most_common()\n","    word_dict = dict()\n","    word_dict[\"<pad>\"] = 0\n","    word_dict[\"<unk>\"] = 1\n","    word_dict[\"<eos>\"] = 2\n","    for word, _ in word_counter:\n","        word_dict[word] = len(word_dict)\n","    return word_dict\n","\n","\n","def preprocess(contents, word_dict, document_max_len):\n","    x = list(map(lambda d: word_tokenize(clean_str(d)), contents))\n","    x = list(map(lambda d: list(map(lambda w: word_dict.get(w, word_dict[\"<unk>\"]), d)), x))\n","    x = list(map(lambda d: d + [word_dict[\"<eos>\"]], x))\n","    x = list(map(lambda d: d[:document_max_len], x))\n","    x = list(map(lambda d: d + (document_max_len - len(d)) * [word_dict[\"<pad>\"]], x))\n","    return x\n","\n","\n","def read_data_words():\n","    x_train, y_train, x_test, y_test = [], [], [], []\n","    cop = re.compile(\"[^a-z^A-Z^0-9^,^.^' ']\")\n","    with open('/content/drive/My Drive/Neural Networks/NN_Assignment_2/Part_B_Text_Classification/train_medium.csv', encoding='utf-8') as filex:\n","        reader = csv.reader(filex)\n","        for row in reader:\n","            data = cop.sub(\"\", row[1])\n","            x_train.append(data)\n","            y_train.append(int(row[0]))\n","\n","    with open('/content/drive/My Drive/Neural Networks/NN_Assignment_2/Part_B_Text_Classification/test_medium.csv', encoding='utf-8') as filex:\n","        reader = csv.reader(filex)\n","        for row in reader:\n","            data = cop.sub(\"\", row[1])\n","            x_test.append(data)\n","            y_test.append(int(row[0]))\n","\n","    word_dict = build_word_dict(x_train+x_test)\n","    x_train = preprocess(x_train, word_dict, 100)\n","    y_train = np.array(y_train)\n","    x_test = preprocess(x_test, word_dict, 100)\n","    y_test = np.array(y_test)\n","\n","    x_train = [x[:100] for x in x_train]\n","    x_test = [x[:100] for x in x_test]\n","    x_train = tf.constant(x_train, dtype=tf.int64)\n","    y_train = tf.constant(y_train, dtype=tf.int64)\n","    x_test = tf.constant(x_test, dtype=tf.int64)\n","    y_test = tf.constant(y_test, dtype=tf.int64)\n","\n","    vocab_size = tf.get_static_value(tf.reduce_max(x_train))\n","    vocab_size = max(vocab_size, tf.get_static_value(tf.reduce_max(x_test))) + 1\n","    return x_train, y_train, x_test, y_test, vocab_size"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"CnWPz07jyrXz","executionInfo":{"status":"ok","timestamp":1604854820125,"user_tz":-480,"elapsed":147019,"user":{"displayName":"Kenneth Ng","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKwZnZ2dHsOvtWnGFQksMtsfZc2QK_Fv86edRayg=s64","userId":"07556015887030206568"}},"outputId":"47503374-9a8f-4126-a032-00b64125e46d","colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["import wandb\n","from wandb.keras import WandbCallback\n","import collections\n","import numpy as np\n","import tensorflow as tf\n","from nltk.tokenize import word_tokenize\n","from tensorflow.keras import Model, layers, models\n","import csv\n","import re\n","\n","# Hyperparameters\n","defaults = {\n","    'embedding_size' : 20,\n","    'num_filters_c1' : 10,\n","    'num_filters_c2' : 10,\n","    'wsize_c1' : (20, 20),\n","    'wsize_c2' :(20, 1),\n","    'batch_size' : 128,\n","    'epochs' : 250,\n","    'lr' : 0.01,\n","    'Dropout' : 'Yes'\n","}\n","\n","# Initiate wandb\n","wandb.init(config=defaults, resume=True, name='WordCNN Q2b', project='NNA2 Part B Redo')\n","config = wandb.config\n","\n","# Fix lucky seed!\n","seed = 7\n","tf.random.set_seed(seed)\n","\n","# Train test split\n","x_train, y_train, x_test, y_test, vocab_size = read_data_words()\n","\n","# Use `tf.data` to batch and shuffle the dataset:\n","train_ds = tf.data.Dataset.from_tensor_slices(\n","    (x_train, y_train)).shuffle(10000).batch(config.batch_size)\n","test_ds = tf.data.Dataset.from_tensor_slices((x_test, y_test)).batch(config.batch_size)\n","\n","model = models.Sequential()\n","model.add(layers.Embedding(vocab_size, config.embedding_size, input_length=100))\n","model.add(layers.Reshape((1,100, config.embedding_size)))\n","model.add(layers.Conv2D(config.num_filters_c1, config.wsize_c1, padding='valid', activation='relu', data_format='channels_first'))\n","model.add(layers.MaxPool2D(pool_size=4, strides=2, padding='same'))\n","model.add(layers.Conv2D(config.num_filters_c2, config.wsize_c2, padding='valid', activation='relu', data_format='channels_first'))\n","model.add(layers.MaxPool2D(pool_size=4, strides=2, padding='same'))\n","model.add(layers.Flatten())\n","model.add(layers.Dropout(0.5))\n","model.add(layers.Dense(15, activation='softmax'))\n","model.summary()\n","\n","# Choose optimizer and loss function\n","loss_object = tf.keras.losses.SparseCategoricalCrossentropy()\n","opt = tf.keras.optimizers.SGD(learning_rate=config.lr)\n","\n","# Compile model\n","model.compile(\n","    optimizer=opt,\n","    loss=loss_object,\n","    metrics=['accuracy'],\n",")\n","\n","# Train model\n","model.fit(\n","    train_ds,\n","    validation_data=test_ds,\n","    epochs=config.epochs,\n","    callbacks=[WandbCallback()],\n","    )"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/javascript":["\n","        window._wandbApiKey = new Promise((resolve, reject) => {\n","            function loadScript(url) {\n","            return new Promise(function(resolve, reject) {\n","                let newScript = document.createElement(\"script\");\n","                newScript.onerror = reject;\n","                newScript.onload = resolve;\n","                document.body.appendChild(newScript);\n","                newScript.src = url;\n","            });\n","            }\n","            loadScript(\"https://cdn.jsdelivr.net/npm/postmate/build/postmate.min.js\").then(() => {\n","            const iframe = document.createElement('iframe')\n","            iframe.style.cssText = \"width:0;height:0;border:none\"\n","            document.body.appendChild(iframe)\n","            const handshake = new Postmate({\n","                container: iframe,\n","                url: 'https://wandb.ai/authorize'\n","            });\n","            const timeout = setTimeout(() => reject(\"Couldn't auto authenticate\"), 5000)\n","            handshake.then(function(child) {\n","                child.on('authorize', data => {\n","                    clearTimeout(timeout)\n","                    resolve(data)\n","                });\n","            });\n","            })\n","        });\n","    "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\u001b[34m\u001b[1mwandb\u001b[0m: You can find your API key in your browser here: https://wandb.ai/authorize\n"],"name":"stderr"},{"output_type":"stream","text":["wandb: Paste an API key from your profile and hit enter: ··········\n"],"name":"stdout"},{"output_type":"stream","text":["\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n"],"name":"stderr"},{"output_type":"display_data","data":{"text/html":["\n","                Tracking run with wandb version 0.10.9<br/>\n","                Syncing run <strong style=\"color:#cdcd00\">WordCNN Q2b</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n","                Project page: <a href=\"https://wandb.ai/todayisagreatday/NNA2%20Part%20B%20Redo\" target=\"_blank\">https://wandb.ai/todayisagreatday/NNA2%20Part%20B%20Redo</a><br/>\n","                Run page: <a href=\"https://wandb.ai/todayisagreatday/NNA2%20Part%20B%20Redo/runs/1hemgjts\" target=\"_blank\">https://wandb.ai/todayisagreatday/NNA2%20Part%20B%20Redo/runs/1hemgjts</a><br/>\n","                Run data is saved locally in <code>wandb/run-20201108_165847-1hemgjts</code><br/><br/>\n","            "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding (Embedding)        (None, 100, 20)           705740    \n","_________________________________________________________________\n","reshape (Reshape)            (None, 1, 100, 20)        0         \n","_________________________________________________________________\n","conv2d (Conv2D)              (None, 10, 81, 1)         4010      \n","_________________________________________________________________\n","max_pooling2d (MaxPooling2D) (None, 5, 41, 1)          0         \n","_________________________________________________________________\n","conv2d_1 (Conv2D)            (None, 10, 22, 1)         1010      \n","_________________________________________________________________\n","max_pooling2d_1 (MaxPooling2 (None, 5, 11, 1)          0         \n","_________________________________________________________________\n","flatten (Flatten)            (None, 55)                0         \n","_________________________________________________________________\n","dropout (Dropout)            (None, 55)                0         \n","_________________________________________________________________\n","dense (Dense)                (None, 15)                840       \n","=================================================================\n","Total params: 711,600\n","Trainable params: 711,600\n","Non-trainable params: 0\n","_________________________________________________________________\n","Epoch 1/250\n","44/44 [==============================] - 0s 11ms/step - loss: 2.7042 - accuracy: 0.0732 - val_loss: 2.7001 - val_accuracy: 0.0843\n","Epoch 2/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6984 - accuracy: 0.0686 - val_loss: 2.6948 - val_accuracy: 0.0814\n","Epoch 3/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6970 - accuracy: 0.0696 - val_loss: 2.6922 - val_accuracy: 0.0757\n","Epoch 4/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6961 - accuracy: 0.0712 - val_loss: 2.6901 - val_accuracy: 0.0814\n","Epoch 5/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6929 - accuracy: 0.0655 - val_loss: 2.6878 - val_accuracy: 0.0800\n","Epoch 6/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6912 - accuracy: 0.0764 - val_loss: 2.6860 - val_accuracy: 0.0829\n","Epoch 7/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6917 - accuracy: 0.0718 - val_loss: 2.6847 - val_accuracy: 0.0814\n","Epoch 8/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6888 - accuracy: 0.0707 - val_loss: 2.6828 - val_accuracy: 0.0814\n","Epoch 9/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6881 - accuracy: 0.0720 - val_loss: 2.6816 - val_accuracy: 0.0814\n","Epoch 10/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6846 - accuracy: 0.0727 - val_loss: 2.6799 - val_accuracy: 0.0843\n","Epoch 11/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6842 - accuracy: 0.0695 - val_loss: 2.6785 - val_accuracy: 0.0729\n","Epoch 12/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6835 - accuracy: 0.0732 - val_loss: 2.6774 - val_accuracy: 0.0757\n","Epoch 13/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6821 - accuracy: 0.0714 - val_loss: 2.6762 - val_accuracy: 0.0771\n","Epoch 14/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6788 - accuracy: 0.0741 - val_loss: 2.6744 - val_accuracy: 0.0829\n","Epoch 15/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6769 - accuracy: 0.0754 - val_loss: 2.6727 - val_accuracy: 0.0829\n","Epoch 16/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6781 - accuracy: 0.0816 - val_loss: 2.6720 - val_accuracy: 0.0686\n","Epoch 17/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6766 - accuracy: 0.0720 - val_loss: 2.6711 - val_accuracy: 0.0786\n","Epoch 18/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6776 - accuracy: 0.0757 - val_loss: 2.6703 - val_accuracy: 0.0800\n","Epoch 19/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6772 - accuracy: 0.0720 - val_loss: 2.6696 - val_accuracy: 0.0800\n","Epoch 20/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6740 - accuracy: 0.0754 - val_loss: 2.6683 - val_accuracy: 0.0800\n","Epoch 21/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6723 - accuracy: 0.0793 - val_loss: 2.6670 - val_accuracy: 0.0843\n","Epoch 22/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6700 - accuracy: 0.0746 - val_loss: 2.6654 - val_accuracy: 0.0786\n","Epoch 23/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6739 - accuracy: 0.0700 - val_loss: 2.6654 - val_accuracy: 0.0871\n","Epoch 24/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6683 - accuracy: 0.0793 - val_loss: 2.6641 - val_accuracy: 0.0857\n","Epoch 25/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6705 - accuracy: 0.0766 - val_loss: 2.6633 - val_accuracy: 0.0871\n","Epoch 26/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6677 - accuracy: 0.0800 - val_loss: 2.6622 - val_accuracy: 0.0886\n","Epoch 27/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6682 - accuracy: 0.0768 - val_loss: 2.6615 - val_accuracy: 0.0857\n","Epoch 28/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6688 - accuracy: 0.0816 - val_loss: 2.6610 - val_accuracy: 0.0914\n","Epoch 29/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6660 - accuracy: 0.0775 - val_loss: 2.6599 - val_accuracy: 0.0914\n","Epoch 30/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6662 - accuracy: 0.0777 - val_loss: 2.6589 - val_accuracy: 0.0957\n","Epoch 31/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6644 - accuracy: 0.0779 - val_loss: 2.6580 - val_accuracy: 0.0971\n","Epoch 32/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6641 - accuracy: 0.0804 - val_loss: 2.6571 - val_accuracy: 0.0971\n","Epoch 33/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6637 - accuracy: 0.0812 - val_loss: 2.6565 - val_accuracy: 0.0929\n","Epoch 34/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6636 - accuracy: 0.0800 - val_loss: 2.6559 - val_accuracy: 0.1000\n","Epoch 35/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6635 - accuracy: 0.0800 - val_loss: 2.6554 - val_accuracy: 0.0986\n","Epoch 36/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6620 - accuracy: 0.0846 - val_loss: 2.6543 - val_accuracy: 0.0986\n","Epoch 37/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6604 - accuracy: 0.0827 - val_loss: 2.6533 - val_accuracy: 0.1014\n","Epoch 38/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6579 - accuracy: 0.0814 - val_loss: 2.6518 - val_accuracy: 0.1000\n","Epoch 39/250\n","44/44 [==============================] - 0s 5ms/step - loss: 2.6623 - accuracy: 0.0787 - val_loss: 2.6521 - val_accuracy: 0.1014\n","Epoch 40/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6582 - accuracy: 0.0843 - val_loss: 2.6505 - val_accuracy: 0.1029\n","Epoch 41/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6592 - accuracy: 0.0804 - val_loss: 2.6499 - val_accuracy: 0.1000\n","Epoch 42/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6569 - accuracy: 0.0875 - val_loss: 2.6489 - val_accuracy: 0.1043\n","Epoch 43/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6588 - accuracy: 0.0811 - val_loss: 2.6486 - val_accuracy: 0.1029\n","Epoch 44/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6543 - accuracy: 0.0857 - val_loss: 2.6473 - val_accuracy: 0.1014\n","Epoch 45/250\n","44/44 [==============================] - 0s 9ms/step - loss: 2.6540 - accuracy: 0.0823 - val_loss: 2.6463 - val_accuracy: 0.0971\n","Epoch 46/250\n","44/44 [==============================] - 0s 5ms/step - loss: 2.6572 - accuracy: 0.0823 - val_loss: 2.6464 - val_accuracy: 0.0971\n","Epoch 47/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6529 - accuracy: 0.0811 - val_loss: 2.6456 - val_accuracy: 0.0929\n","Epoch 48/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6544 - accuracy: 0.0866 - val_loss: 2.6444 - val_accuracy: 0.0929\n","Epoch 49/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6546 - accuracy: 0.0857 - val_loss: 2.6442 - val_accuracy: 0.0971\n","Epoch 50/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6545 - accuracy: 0.0843 - val_loss: 2.6439 - val_accuracy: 0.0900\n","Epoch 51/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6529 - accuracy: 0.0864 - val_loss: 2.6428 - val_accuracy: 0.0914\n","Epoch 52/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6466 - accuracy: 0.0921 - val_loss: 2.6404 - val_accuracy: 0.0957\n","Epoch 53/250\n","44/44 [==============================] - 0s 5ms/step - loss: 2.6521 - accuracy: 0.0891 - val_loss: 2.6406 - val_accuracy: 0.1014\n","Epoch 54/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6497 - accuracy: 0.0839 - val_loss: 2.6401 - val_accuracy: 0.1014\n","Epoch 55/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6473 - accuracy: 0.0825 - val_loss: 2.6387 - val_accuracy: 0.0943\n","Epoch 56/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6439 - accuracy: 0.0959 - val_loss: 2.6364 - val_accuracy: 0.1000\n","Epoch 57/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6477 - accuracy: 0.0873 - val_loss: 2.6360 - val_accuracy: 0.1071\n","Epoch 58/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6467 - accuracy: 0.0943 - val_loss: 2.6361 - val_accuracy: 0.1057\n","Epoch 59/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6436 - accuracy: 0.0895 - val_loss: 2.6349 - val_accuracy: 0.1086\n","Epoch 60/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6480 - accuracy: 0.0927 - val_loss: 2.6352 - val_accuracy: 0.1043\n","Epoch 61/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6442 - accuracy: 0.0898 - val_loss: 2.6343 - val_accuracy: 0.1000\n","Epoch 62/250\n","44/44 [==============================] - 0s 8ms/step - loss: 2.6422 - accuracy: 0.0977 - val_loss: 2.6321 - val_accuracy: 0.1043\n","Epoch 63/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6461 - accuracy: 0.0884 - val_loss: 2.6326 - val_accuracy: 0.1000\n","Epoch 64/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6412 - accuracy: 0.0927 - val_loss: 2.6313 - val_accuracy: 0.0986\n","Epoch 65/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6367 - accuracy: 0.1030 - val_loss: 2.6283 - val_accuracy: 0.0971\n","Epoch 66/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6434 - accuracy: 0.0932 - val_loss: 2.6290 - val_accuracy: 0.1014\n","Epoch 67/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6390 - accuracy: 0.0873 - val_loss: 2.6275 - val_accuracy: 0.1000\n","Epoch 68/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6384 - accuracy: 0.0975 - val_loss: 2.6264 - val_accuracy: 0.1000\n","Epoch 69/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6383 - accuracy: 0.0929 - val_loss: 2.6256 - val_accuracy: 0.1000\n","Epoch 70/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6349 - accuracy: 0.0952 - val_loss: 2.6246 - val_accuracy: 0.0943\n","Epoch 71/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6405 - accuracy: 0.0904 - val_loss: 2.6243 - val_accuracy: 0.1000\n","Epoch 72/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6392 - accuracy: 0.0868 - val_loss: 2.6237 - val_accuracy: 0.0957\n","Epoch 73/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6347 - accuracy: 0.0962 - val_loss: 2.6220 - val_accuracy: 0.0957\n","Epoch 74/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6337 - accuracy: 0.1029 - val_loss: 2.6209 - val_accuracy: 0.0929\n","Epoch 75/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6294 - accuracy: 0.0952 - val_loss: 2.6188 - val_accuracy: 0.0929\n","Epoch 76/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6369 - accuracy: 0.0946 - val_loss: 2.6194 - val_accuracy: 0.0943\n","Epoch 77/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6322 - accuracy: 0.0970 - val_loss: 2.6178 - val_accuracy: 0.0957\n","Epoch 78/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6320 - accuracy: 0.0939 - val_loss: 2.6170 - val_accuracy: 0.0943\n","Epoch 79/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6295 - accuracy: 0.0964 - val_loss: 2.6157 - val_accuracy: 0.0929\n","Epoch 80/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6308 - accuracy: 0.0954 - val_loss: 2.6150 - val_accuracy: 0.0957\n","Epoch 81/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6306 - accuracy: 0.0968 - val_loss: 2.6148 - val_accuracy: 0.0943\n","Epoch 82/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6299 - accuracy: 0.0959 - val_loss: 2.6138 - val_accuracy: 0.0943\n","Epoch 83/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6287 - accuracy: 0.0957 - val_loss: 2.6128 - val_accuracy: 0.0957\n","Epoch 84/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6265 - accuracy: 0.1018 - val_loss: 2.6119 - val_accuracy: 0.0957\n","Epoch 85/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6226 - accuracy: 0.1021 - val_loss: 2.6090 - val_accuracy: 0.0943\n","Epoch 86/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6267 - accuracy: 0.0986 - val_loss: 2.6098 - val_accuracy: 0.0943\n","Epoch 87/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6202 - accuracy: 0.0948 - val_loss: 2.6078 - val_accuracy: 0.0957\n","Epoch 88/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6263 - accuracy: 0.1005 - val_loss: 2.6085 - val_accuracy: 0.0957\n","Epoch 89/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6223 - accuracy: 0.0995 - val_loss: 2.6074 - val_accuracy: 0.0929\n","Epoch 90/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6208 - accuracy: 0.1005 - val_loss: 2.6054 - val_accuracy: 0.0943\n","Epoch 91/250\n","44/44 [==============================] - 0s 5ms/step - loss: 2.6254 - accuracy: 0.1039 - val_loss: 2.6061 - val_accuracy: 0.0957\n","Epoch 92/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6197 - accuracy: 0.1020 - val_loss: 2.6031 - val_accuracy: 0.0971\n","Epoch 93/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6213 - accuracy: 0.0934 - val_loss: 2.6033 - val_accuracy: 0.0957\n","Epoch 94/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6222 - accuracy: 0.1002 - val_loss: 2.6018 - val_accuracy: 0.0957\n","Epoch 95/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6165 - accuracy: 0.1039 - val_loss: 2.6005 - val_accuracy: 0.0943\n","Epoch 96/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6182 - accuracy: 0.1046 - val_loss: 2.5994 - val_accuracy: 0.0957\n","Epoch 97/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6209 - accuracy: 0.0950 - val_loss: 2.5995 - val_accuracy: 0.0971\n","Epoch 98/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6128 - accuracy: 0.1004 - val_loss: 2.5969 - val_accuracy: 0.0943\n","Epoch 99/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6149 - accuracy: 0.1045 - val_loss: 2.5957 - val_accuracy: 0.0957\n","Epoch 100/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6115 - accuracy: 0.1054 - val_loss: 2.5929 - val_accuracy: 0.0971\n","Epoch 101/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6089 - accuracy: 0.0980 - val_loss: 2.5916 - val_accuracy: 0.1057\n","Epoch 102/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6066 - accuracy: 0.1039 - val_loss: 2.5899 - val_accuracy: 0.1086\n","Epoch 103/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6046 - accuracy: 0.0961 - val_loss: 2.5865 - val_accuracy: 0.1071\n","Epoch 104/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.6041 - accuracy: 0.1059 - val_loss: 2.5853 - val_accuracy: 0.1129\n","Epoch 105/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.6007 - accuracy: 0.1111 - val_loss: 2.5812 - val_accuracy: 0.1129\n","Epoch 106/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.5962 - accuracy: 0.1070 - val_loss: 2.5784 - val_accuracy: 0.1186\n","Epoch 107/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.5948 - accuracy: 0.1084 - val_loss: 2.5774 - val_accuracy: 0.1300\n","Epoch 108/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.5959 - accuracy: 0.1157 - val_loss: 2.5735 - val_accuracy: 0.1214\n","Epoch 109/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.5887 - accuracy: 0.1145 - val_loss: 2.5696 - val_accuracy: 0.1357\n","Epoch 110/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.5834 - accuracy: 0.1166 - val_loss: 2.5630 - val_accuracy: 0.1271\n","Epoch 111/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.5771 - accuracy: 0.1216 - val_loss: 2.5586 - val_accuracy: 0.1343\n","Epoch 112/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.5694 - accuracy: 0.1229 - val_loss: 2.5505 - val_accuracy: 0.1386\n","Epoch 113/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.5674 - accuracy: 0.1173 - val_loss: 2.5443 - val_accuracy: 0.1343\n","Epoch 114/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.5606 - accuracy: 0.1289 - val_loss: 2.5344 - val_accuracy: 0.1443\n","Epoch 115/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.5516 - accuracy: 0.1286 - val_loss: 2.5302 - val_accuracy: 0.1471\n","Epoch 116/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.5543 - accuracy: 0.1216 - val_loss: 2.5252 - val_accuracy: 0.1429\n","Epoch 117/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.5384 - accuracy: 0.1296 - val_loss: 2.5113 - val_accuracy: 0.1471\n","Epoch 118/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.5335 - accuracy: 0.1343 - val_loss: 2.5029 - val_accuracy: 0.1543\n","Epoch 119/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.5324 - accuracy: 0.1304 - val_loss: 2.4953 - val_accuracy: 0.1557\n","Epoch 120/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.5186 - accuracy: 0.1330 - val_loss: 2.4866 - val_accuracy: 0.1529\n","Epoch 121/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.5122 - accuracy: 0.1273 - val_loss: 2.4774 - val_accuracy: 0.1586\n","Epoch 122/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.5027 - accuracy: 0.1375 - val_loss: 2.4634 - val_accuracy: 0.1600\n","Epoch 123/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.4905 - accuracy: 0.1364 - val_loss: 2.4520 - val_accuracy: 0.1571\n","Epoch 124/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.4777 - accuracy: 0.1373 - val_loss: 2.4441 - val_accuracy: 0.1714\n","Epoch 125/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.4668 - accuracy: 0.1354 - val_loss: 2.4331 - val_accuracy: 0.1614\n","Epoch 126/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.4627 - accuracy: 0.1452 - val_loss: 2.4185 - val_accuracy: 0.1657\n","Epoch 127/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.4505 - accuracy: 0.1473 - val_loss: 2.4000 - val_accuracy: 0.1671\n","Epoch 128/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.4454 - accuracy: 0.1455 - val_loss: 2.3968 - val_accuracy: 0.1571\n","Epoch 129/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.4347 - accuracy: 0.1443 - val_loss: 2.3814 - val_accuracy: 0.1586\n","Epoch 130/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.4318 - accuracy: 0.1377 - val_loss: 2.3756 - val_accuracy: 0.1671\n","Epoch 131/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.4195 - accuracy: 0.1434 - val_loss: 2.3595 - val_accuracy: 0.1614\n","Epoch 132/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.4052 - accuracy: 0.1480 - val_loss: 2.3438 - val_accuracy: 0.1657\n","Epoch 133/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.3870 - accuracy: 0.1598 - val_loss: 2.3298 - val_accuracy: 0.1729\n","Epoch 134/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.3722 - accuracy: 0.1511 - val_loss: 2.3189 - val_accuracy: 0.1629\n","Epoch 135/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.3689 - accuracy: 0.1520 - val_loss: 2.3075 - val_accuracy: 0.1700\n","Epoch 136/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.3657 - accuracy: 0.1480 - val_loss: 2.2990 - val_accuracy: 0.1800\n","Epoch 137/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.3524 - accuracy: 0.1529 - val_loss: 2.3030 - val_accuracy: 0.1657\n","Epoch 138/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.3366 - accuracy: 0.1612 - val_loss: 2.2701 - val_accuracy: 0.1686\n","Epoch 139/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.3233 - accuracy: 0.1618 - val_loss: 2.2696 - val_accuracy: 0.1771\n","Epoch 140/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.3200 - accuracy: 0.1559 - val_loss: 2.2500 - val_accuracy: 0.1843\n","Epoch 141/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.3036 - accuracy: 0.1579 - val_loss: 2.2411 - val_accuracy: 0.1829\n","Epoch 142/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.2916 - accuracy: 0.1605 - val_loss: 2.2251 - val_accuracy: 0.1914\n","Epoch 143/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.2940 - accuracy: 0.1566 - val_loss: 2.2922 - val_accuracy: 0.1629\n","Epoch 144/250\n","44/44 [==============================] - 0s 5ms/step - loss: 2.2809 - accuracy: 0.1609 - val_loss: 2.2269 - val_accuracy: 0.1786\n","Epoch 145/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.2606 - accuracy: 0.1675 - val_loss: 2.1913 - val_accuracy: 0.1871\n","Epoch 146/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.2631 - accuracy: 0.1646 - val_loss: 2.1876 - val_accuracy: 0.1929\n","Epoch 147/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.2488 - accuracy: 0.1711 - val_loss: 2.1733 - val_accuracy: 0.1857\n","Epoch 148/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.2443 - accuracy: 0.1648 - val_loss: 2.1790 - val_accuracy: 0.2014\n","Epoch 149/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.2475 - accuracy: 0.1584 - val_loss: 2.1560 - val_accuracy: 0.1929\n","Epoch 150/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.2184 - accuracy: 0.1759 - val_loss: 2.1641 - val_accuracy: 0.1957\n","Epoch 151/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.2078 - accuracy: 0.1823 - val_loss: 2.1361 - val_accuracy: 0.2000\n","Epoch 152/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.1987 - accuracy: 0.1698 - val_loss: 2.1423 - val_accuracy: 0.2057\n","Epoch 153/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.1871 - accuracy: 0.1868 - val_loss: 2.1209 - val_accuracy: 0.2014\n","Epoch 154/250\n","44/44 [==============================] - 0s 5ms/step - loss: 2.1832 - accuracy: 0.1787 - val_loss: 2.1595 - val_accuracy: 0.1929\n","Epoch 155/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.1754 - accuracy: 0.1764 - val_loss: 2.0969 - val_accuracy: 0.2029\n","Epoch 156/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.1578 - accuracy: 0.1930 - val_loss: 2.1120 - val_accuracy: 0.1971\n","Epoch 157/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.1560 - accuracy: 0.1832 - val_loss: 2.0933 - val_accuracy: 0.2014\n","Epoch 158/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.1399 - accuracy: 0.1866 - val_loss: 2.1048 - val_accuracy: 0.1886\n","Epoch 159/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.1389 - accuracy: 0.1911 - val_loss: 2.0627 - val_accuracy: 0.2186\n","Epoch 160/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.1418 - accuracy: 0.1877 - val_loss: 2.0683 - val_accuracy: 0.2043\n","Epoch 161/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.1190 - accuracy: 0.1977 - val_loss: 2.0534 - val_accuracy: 0.2086\n","Epoch 162/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.1073 - accuracy: 0.2093 - val_loss: 2.0503 - val_accuracy: 0.2157\n","Epoch 163/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.1434 - accuracy: 0.1841 - val_loss: 2.1579 - val_accuracy: 0.1700\n","Epoch 164/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.1269 - accuracy: 0.1921 - val_loss: 2.0436 - val_accuracy: 0.2243\n","Epoch 165/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.0882 - accuracy: 0.2004 - val_loss: 2.0239 - val_accuracy: 0.2286\n","Epoch 166/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.0903 - accuracy: 0.1946 - val_loss: 2.0152 - val_accuracy: 0.2343\n","Epoch 167/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.0848 - accuracy: 0.1977 - val_loss: 2.0149 - val_accuracy: 0.2257\n","Epoch 168/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.0698 - accuracy: 0.2080 - val_loss: 2.0377 - val_accuracy: 0.2229\n","Epoch 169/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.0625 - accuracy: 0.2050 - val_loss: 1.9931 - val_accuracy: 0.2286\n","Epoch 170/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.0443 - accuracy: 0.2188 - val_loss: 1.9881 - val_accuracy: 0.2314\n","Epoch 171/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.0368 - accuracy: 0.2279 - val_loss: 1.9795 - val_accuracy: 0.2300\n","Epoch 172/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.0364 - accuracy: 0.2145 - val_loss: 1.9770 - val_accuracy: 0.2286\n","Epoch 173/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.0317 - accuracy: 0.2155 - val_loss: 1.9666 - val_accuracy: 0.2386\n","Epoch 174/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.0273 - accuracy: 0.2170 - val_loss: 1.9913 - val_accuracy: 0.2429\n","Epoch 175/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.0149 - accuracy: 0.2200 - val_loss: 1.9933 - val_accuracy: 0.2171\n","Epoch 176/250\n","44/44 [==============================] - 0s 7ms/step - loss: 2.0035 - accuracy: 0.2275 - val_loss: 1.9433 - val_accuracy: 0.2371\n","Epoch 177/250\n","44/44 [==============================] - 0s 7ms/step - loss: 1.9934 - accuracy: 0.2316 - val_loss: 1.9428 - val_accuracy: 0.2443\n","Epoch 178/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.9740 - accuracy: 0.2411 - val_loss: 1.9253 - val_accuracy: 0.2471\n","Epoch 179/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.9824 - accuracy: 0.2362 - val_loss: 1.9482 - val_accuracy: 0.2557\n","Epoch 180/250\n","44/44 [==============================] - 0s 6ms/step - loss: 2.0224 - accuracy: 0.2338 - val_loss: 2.0317 - val_accuracy: 0.2129\n","Epoch 181/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.9779 - accuracy: 0.2309 - val_loss: 1.9153 - val_accuracy: 0.2557\n","Epoch 182/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.9579 - accuracy: 0.2404 - val_loss: 1.9266 - val_accuracy: 0.2629\n","Epoch 183/250\n","44/44 [==============================] - 0s 7ms/step - loss: 1.9573 - accuracy: 0.2421 - val_loss: 1.9052 - val_accuracy: 0.2614\n","Epoch 184/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.9475 - accuracy: 0.2391 - val_loss: 1.9108 - val_accuracy: 0.2586\n","Epoch 185/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.9311 - accuracy: 0.2618 - val_loss: 1.9052 - val_accuracy: 0.2643\n","Epoch 186/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.9201 - accuracy: 0.2500 - val_loss: 1.9080 - val_accuracy: 0.2814\n","Epoch 187/250\n","44/44 [==============================] - 0s 7ms/step - loss: 1.9231 - accuracy: 0.2611 - val_loss: 1.8835 - val_accuracy: 0.2729\n","Epoch 188/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.9260 - accuracy: 0.2554 - val_loss: 1.8747 - val_accuracy: 0.2971\n","Epoch 189/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.9263 - accuracy: 0.2523 - val_loss: 1.8643 - val_accuracy: 0.2986\n","Epoch 190/250\n","44/44 [==============================] - 0s 7ms/step - loss: 1.8934 - accuracy: 0.2575 - val_loss: 1.8560 - val_accuracy: 0.2971\n","Epoch 191/250\n","44/44 [==============================] - 0s 7ms/step - loss: 1.9083 - accuracy: 0.2598 - val_loss: 1.8520 - val_accuracy: 0.3086\n","Epoch 192/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.8928 - accuracy: 0.2716 - val_loss: 1.8555 - val_accuracy: 0.3014\n","Epoch 193/250\n","44/44 [==============================] - 0s 7ms/step - loss: 1.8699 - accuracy: 0.2750 - val_loss: 1.8485 - val_accuracy: 0.3086\n","Epoch 194/250\n","44/44 [==============================] - 0s 7ms/step - loss: 1.8720 - accuracy: 0.2807 - val_loss: 1.8311 - val_accuracy: 0.3214\n","Epoch 195/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.8664 - accuracy: 0.2818 - val_loss: 1.8312 - val_accuracy: 0.3271\n","Epoch 196/250\n","44/44 [==============================] - 0s 7ms/step - loss: 1.8857 - accuracy: 0.2800 - val_loss: 1.8248 - val_accuracy: 0.3371\n","Epoch 197/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.8484 - accuracy: 0.2877 - val_loss: 1.8309 - val_accuracy: 0.3371\n","Epoch 198/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.8266 - accuracy: 0.2986 - val_loss: 1.8318 - val_accuracy: 0.3214\n","Epoch 199/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.8402 - accuracy: 0.2902 - val_loss: 1.8259 - val_accuracy: 0.3371\n","Epoch 200/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.8164 - accuracy: 0.2986 - val_loss: 1.7932 - val_accuracy: 0.3586\n","Epoch 201/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.8324 - accuracy: 0.2911 - val_loss: 1.8091 - val_accuracy: 0.3386\n","Epoch 202/250\n","44/44 [==============================] - 0s 5ms/step - loss: 1.8175 - accuracy: 0.2955 - val_loss: 2.1855 - val_accuracy: 0.2729\n","Epoch 203/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.8458 - accuracy: 0.3004 - val_loss: 1.7961 - val_accuracy: 0.3686\n","Epoch 204/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.8087 - accuracy: 0.3089 - val_loss: 1.8610 - val_accuracy: 0.3029\n","Epoch 205/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.7721 - accuracy: 0.3202 - val_loss: 1.8285 - val_accuracy: 0.3257\n","Epoch 206/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.7862 - accuracy: 0.3155 - val_loss: 1.8156 - val_accuracy: 0.3414\n","Epoch 207/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.7822 - accuracy: 0.3132 - val_loss: 1.7521 - val_accuracy: 0.3814\n","Epoch 208/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.7723 - accuracy: 0.3132 - val_loss: 1.7495 - val_accuracy: 0.3800\n","Epoch 209/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.7613 - accuracy: 0.3255 - val_loss: 1.8902 - val_accuracy: 0.3000\n","Epoch 210/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.7404 - accuracy: 0.3321 - val_loss: 1.7661 - val_accuracy: 0.3800\n","Epoch 211/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.7590 - accuracy: 0.3334 - val_loss: 1.8145 - val_accuracy: 0.3400\n","Epoch 212/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.7969 - accuracy: 0.3345 - val_loss: 1.7360 - val_accuracy: 0.3971\n","Epoch 213/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.7342 - accuracy: 0.3330 - val_loss: 1.7283 - val_accuracy: 0.4071\n","Epoch 214/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.7263 - accuracy: 0.3354 - val_loss: 1.7483 - val_accuracy: 0.3871\n","Epoch 215/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.7367 - accuracy: 0.3305 - val_loss: 1.8074 - val_accuracy: 0.3443\n","Epoch 216/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.7321 - accuracy: 0.3346 - val_loss: 1.7295 - val_accuracy: 0.3800\n","Epoch 217/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.7116 - accuracy: 0.3495 - val_loss: 1.7787 - val_accuracy: 0.3529\n","Epoch 218/250\n","44/44 [==============================] - 0s 7ms/step - loss: 1.7156 - accuracy: 0.3505 - val_loss: 1.7010 - val_accuracy: 0.4043\n","Epoch 219/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.7327 - accuracy: 0.3384 - val_loss: 1.7524 - val_accuracy: 0.3629\n","Epoch 220/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.6747 - accuracy: 0.3545 - val_loss: 1.7090 - val_accuracy: 0.3943\n","Epoch 221/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.6834 - accuracy: 0.3577 - val_loss: 1.7050 - val_accuracy: 0.3886\n","Epoch 222/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.6956 - accuracy: 0.3613 - val_loss: 1.7514 - val_accuracy: 0.3700\n","Epoch 223/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.6667 - accuracy: 0.3634 - val_loss: 1.6979 - val_accuracy: 0.3929\n","Epoch 224/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.6743 - accuracy: 0.3589 - val_loss: 1.6755 - val_accuracy: 0.4171\n","Epoch 225/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.6622 - accuracy: 0.3634 - val_loss: 1.7326 - val_accuracy: 0.3771\n","Epoch 226/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.6385 - accuracy: 0.3700 - val_loss: 1.6614 - val_accuracy: 0.4200\n","Epoch 227/250\n","44/44 [==============================] - 0s 5ms/step - loss: 1.6641 - accuracy: 0.3688 - val_loss: 1.7385 - val_accuracy: 0.3929\n","Epoch 228/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.6250 - accuracy: 0.3750 - val_loss: 1.6822 - val_accuracy: 0.4129\n","Epoch 229/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.6394 - accuracy: 0.3796 - val_loss: 1.6485 - val_accuracy: 0.4329\n","Epoch 230/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.6432 - accuracy: 0.3727 - val_loss: 1.6977 - val_accuracy: 0.4157\n","Epoch 231/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.6490 - accuracy: 0.3723 - val_loss: 1.7266 - val_accuracy: 0.3943\n","Epoch 232/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.6239 - accuracy: 0.3834 - val_loss: 1.7175 - val_accuracy: 0.4057\n","Epoch 233/250\n","44/44 [==============================] - 0s 7ms/step - loss: 1.6215 - accuracy: 0.3782 - val_loss: 1.6380 - val_accuracy: 0.4314\n","Epoch 234/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.6266 - accuracy: 0.3834 - val_loss: 1.6357 - val_accuracy: 0.4343\n","Epoch 235/250\n","44/44 [==============================] - 0s 7ms/step - loss: 1.5884 - accuracy: 0.3996 - val_loss: 1.6780 - val_accuracy: 0.4114\n","Epoch 236/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.5969 - accuracy: 0.3891 - val_loss: 1.6745 - val_accuracy: 0.4229\n","Epoch 237/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.5976 - accuracy: 0.3943 - val_loss: 1.6420 - val_accuracy: 0.4243\n","Epoch 238/250\n","44/44 [==============================] - 0s 5ms/step - loss: 1.6001 - accuracy: 0.3993 - val_loss: 1.6653 - val_accuracy: 0.4300\n","Epoch 239/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.5776 - accuracy: 0.3973 - val_loss: 1.6142 - val_accuracy: 0.4329\n","Epoch 240/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.5616 - accuracy: 0.4038 - val_loss: 1.8267 - val_accuracy: 0.3600\n","Epoch 241/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.5794 - accuracy: 0.3971 - val_loss: 1.7205 - val_accuracy: 0.4043\n","Epoch 242/250\n","44/44 [==============================] - 0s 7ms/step - loss: 1.5535 - accuracy: 0.4171 - val_loss: 1.6014 - val_accuracy: 0.4471\n","Epoch 243/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.5751 - accuracy: 0.4014 - val_loss: 1.7946 - val_accuracy: 0.3829\n","Epoch 244/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.5769 - accuracy: 0.4132 - val_loss: 1.6158 - val_accuracy: 0.4443\n","Epoch 245/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.5613 - accuracy: 0.4148 - val_loss: 1.6458 - val_accuracy: 0.4143\n","Epoch 246/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.5340 - accuracy: 0.4304 - val_loss: 1.5922 - val_accuracy: 0.4500\n","Epoch 247/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.5346 - accuracy: 0.4182 - val_loss: 1.5952 - val_accuracy: 0.4443\n","Epoch 248/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.5431 - accuracy: 0.4162 - val_loss: 1.5809 - val_accuracy: 0.4543\n","Epoch 249/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.5493 - accuracy: 0.4168 - val_loss: 1.6249 - val_accuracy: 0.4471\n","Epoch 250/250\n","44/44 [==============================] - 0s 6ms/step - loss: 1.5128 - accuracy: 0.4339 - val_loss: 1.6020 - val_accuracy: 0.4457\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7f2e68892588>"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"iZi2PzqF_mkT"},"source":[""],"execution_count":null,"outputs":[]}]}