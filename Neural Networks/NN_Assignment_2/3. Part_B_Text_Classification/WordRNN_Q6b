{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"WordRNN_Q6b","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNufv9kVIBmWq5nwMAvR5ds"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"35e026b807274cd9b22f20b45d820534":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","state":{"_view_name":"VBoxView","_dom_classes":[],"_model_name":"VBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_691bb6a98e444fc7a31a0393555c7ab8","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_d9313c7b6c4347599436e2f48ff48c76","IPY_MODEL_808f4efbeac6440b817a926ab079dc08"]}},"691bb6a98e444fc7a31a0393555c7ab8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"d9313c7b6c4347599436e2f48ff48c76":{"model_module":"@jupyter-widgets/controls","model_name":"LabelModel","state":{"_view_name":"LabelView","style":"IPY_MODEL_9d48ebd6ab0e420aadead6c01e90d5a9","_dom_classes":[],"description":"","_model_name":"LabelModel","placeholder":"â€‹","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 0.01MB of 0.01MB uploaded (0.00MB deduped)\r","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_ffdcdc1e8e474081841c7da5456eab85"}},"808f4efbeac6440b817a926ab079dc08":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_0266736ff2744d61a11fa6e31b606446","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_8b7ee0e40b334f26a5d949438ed28bc2"}},"9d48ebd6ab0e420aadead6c01e90d5a9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"ffdcdc1e8e474081841c7da5456eab85":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"0266736ff2744d61a11fa6e31b606446":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"8b7ee0e40b334f26a5d949438ed28bc2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"OjVzas-kK8LZ"},"source":["# Mount Drive"]},{"cell_type":"code","metadata":{"id":"-M48O3QXt0dc","executionInfo":{"status":"ok","timestamp":1605249958538,"user_tz":-480,"elapsed":1115,"user":{"displayName":"Kenneth Ng","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKwZnZ2dHsOvtWnGFQksMtsfZc2QK_Fv86edRayg=s64","userId":"07556015887030206568"}},"outputId":"1e8f9fa0-7f36-478a-fc16-986b8cc262c6","colab":{"base_uri":"https://localhost:8080/"}},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"RIP8nJOGK-qf"},"source":["# Install libraries"]},{"cell_type":"code","metadata":{"id":"Z2gdCDhmybWe","executionInfo":{"status":"ok","timestamp":1605249960767,"user_tz":-480,"elapsed":3327,"user":{"displayName":"Kenneth Ng","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKwZnZ2dHsOvtWnGFQksMtsfZc2QK_Fv86edRayg=s64","userId":"07556015887030206568"}}},"source":["!pip install wandb -qqq"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"aUnW2mpR502Y","executionInfo":{"status":"ok","timestamp":1605249961166,"user_tz":-480,"elapsed":3662,"user":{"displayName":"Kenneth Ng","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKwZnZ2dHsOvtWnGFQksMtsfZc2QK_Fv86edRayg=s64","userId":"07556015887030206568"}},"outputId":"5c74f20f-be72-4277-a450-a3eed2f9ec5e","colab":{"base_uri":"https://localhost:8080/"}},"source":["import nltk\n","nltk.download('punkt')"],"execution_count":3,"outputs":[{"output_type":"stream","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"AXXyht-NLBsq"},"source":["# Run Model"]},{"cell_type":"code","metadata":{"id":"YV-vgOrwzbhT","executionInfo":{"status":"ok","timestamp":1605249961678,"user_tz":-480,"elapsed":3001,"user":{"displayName":"Kenneth Ng","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKwZnZ2dHsOvtWnGFQksMtsfZc2QK_Fv86edRayg=s64","userId":"07556015887030206568"}}},"source":["# Preprocessing Functions\n","def clean_str(text):\n","    text = re.sub(r\"[^A-Za-z0-9(),!?\\'\\`\\\"]\", \" \", text)\n","    text = re.sub(r\"\\s{2,}\", \" \", text)\n","    text = text.strip().lower()\n","\n","    return text\n","\n","\n","def build_word_dict(contents):\n","    words = list()\n","    for content in contents:\n","        for word in word_tokenize(clean_str(content)):\n","            words.append(word)\n","\n","    word_counter = collections.Counter(words).most_common()\n","    word_dict = dict()\n","    word_dict[\"<pad>\"] = 0\n","    word_dict[\"<unk>\"] = 1\n","    word_dict[\"<eos>\"] = 2\n","    for word, _ in word_counter:\n","        word_dict[word] = len(word_dict)\n","    return word_dict\n","\n","\n","def preprocess(contents, word_dict, document_max_len):\n","    x = list(map(lambda d: word_tokenize(clean_str(d)), contents))\n","    x = list(map(lambda d: list(map(lambda w: word_dict.get(w, word_dict[\"<unk>\"]), d)), x))\n","    x = list(map(lambda d: d + [word_dict[\"<eos>\"]], x))\n","    x = list(map(lambda d: d[:document_max_len], x))\n","    x = list(map(lambda d: d + (document_max_len - len(d)) * [word_dict[\"<pad>\"]], x))\n","    return x\n","\n","\n","def read_data_words():\n","    x_train, y_train, x_test, y_test = [], [], [], []\n","    cop = re.compile(\"[^a-z^A-Z^0-9^,^.^' ']\")\n","    with open('/content/drive/My Drive/Neural Networks/NN_Assignment_2/Part_B_Text_Classification/train_medium.csv', encoding='utf-8') as filex:\n","        reader = csv.reader(filex)\n","        for row in reader:\n","            data = cop.sub(\"\", row[1])\n","            x_train.append(data)\n","            y_train.append(int(row[0]))\n","\n","    with open('/content/drive/My Drive/Neural Networks/NN_Assignment_2/Part_B_Text_Classification/test_medium.csv', encoding='utf-8') as filex:\n","        reader = csv.reader(filex)\n","        for row in reader:\n","            data = cop.sub(\"\", row[1])\n","            x_test.append(data)\n","            y_test.append(int(row[0]))\n","\n","    word_dict = build_word_dict(x_train+x_test)\n","    x_train = preprocess(x_train, word_dict, 100)\n","    y_train = np.array(y_train)\n","    x_test = preprocess(x_test, word_dict, 100)\n","    y_test = np.array(y_test)\n","\n","    x_train = [x[:100] for x in x_train]\n","    x_test = [x[:100] for x in x_test]\n","    x_train = tf.constant(x_train, dtype=tf.int64)\n","    y_train = tf.constant(y_train, dtype=tf.int64)\n","    x_test = tf.constant(x_test, dtype=tf.int64)\n","    y_test = tf.constant(y_test, dtype=tf.int64)\n","\n","    vocab_size = tf.get_static_value(tf.reduce_max(x_train))\n","    vocab_size = max(vocab_size, tf.get_static_value(tf.reduce_max(x_test))) + 1\n","    return x_train, y_train, x_test, y_test, vocab_size"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"CnWPz07jyrXz","executionInfo":{"status":"ok","timestamp":1605250441594,"user_tz":-480,"elapsed":458995,"user":{"displayName":"Kenneth Ng","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKwZnZ2dHsOvtWnGFQksMtsfZc2QK_Fv86edRayg=s64","userId":"07556015887030206568"}},"outputId":"9ba2af2d-bc03-4f1a-f373-940ef1f6f26c","colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["35e026b807274cd9b22f20b45d820534","691bb6a98e444fc7a31a0393555c7ab8","d9313c7b6c4347599436e2f48ff48c76","808f4efbeac6440b817a926ab079dc08","9d48ebd6ab0e420aadead6c01e90d5a9","ffdcdc1e8e474081841c7da5456eab85","0266736ff2744d61a11fa6e31b606446","8b7ee0e40b334f26a5d949438ed28bc2"]}},"source":["import wandb\n","from wandb.keras import WandbCallback\n","import collections\n","import numpy as np\n","import tensorflow as tf\n","from nltk.tokenize import word_tokenize\n","from tensorflow.keras import Model, layers, models\n","import csv\n","import re\n","\n","# Hyperparameters\n","defaults = {\n","    'embedding_size' : 50,\n","    'hidden_size' : 20,\n","    'batch_size' : 128,\n","    'epochs' : 100,\n","    'lr' : 0.01,\n","    'Dropout' : 'Yes'\n","}\n","\n","# Initiate wandb\n","wandb.init(config=defaults, resume=True, name='WordRNN Q6b-2 SC2', project='NNA2 Part B Redo', notes='add more dropout')\n","config = wandb.config\n","\n","# Fix lucky seed!\n","seed = 7\n","tf.random.set_seed(seed)\n","\n","# Train test split\n","x_train, y_train, x_test, y_test, vocab_size = read_data_words()\n","\n","# Use `tf.data` to batch and shuffle the dataset:\n","train_ds = tf.data.Dataset.from_tensor_slices(\n","    (x_train, y_train)).shuffle(10000).batch(config.batch_size)\n","test_ds = tf.data.Dataset.from_tensor_slices((x_test, y_test)).batch(config.batch_size)\n","\n","# Define model\n","tf.keras.backend.set_floatx('float32')\n","model = models.Sequential()\n","model.add(layers.Embedding(vocab_size, config.embedding_size, input_length=100))\n","model.add(layers.Dropout(0.5))\n","model.add(layers.RNN(layers.GRUCell(config.hidden_size), unroll=True, return_sequences=True))\n","model.add(layers.Dropout(0.5))\n","model.add(layers.RNN(layers.GRUCell(config.hidden_size), unroll=True))\n","model.add(layers.Dropout(0.5))\n","model.add(layers.Dense(15, activation=None))\n","model.summary()\n","\n","# Choose optimizer and loss function\n","opt = tf.keras.optimizers.Adam(learning_rate=config.lr)\n","loss_object = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True)\n","\n","# Compile model\n","model.compile(\n","    optimizer=opt,\n","    loss=loss_object,\n","    metrics=['accuracy'],\n",")\n","\n","# Train model\n","model.fit(\n","    train_ds,\n","    validation_data=test_ds,\n","    epochs=config.epochs,\n","    callbacks=[WandbCallback()],\n","    )"],"execution_count":6,"outputs":[{"output_type":"display_data","data":{"text/html":["Finishing last run (ID:2jhk9rna) before initializing another..."],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<br/>Waiting for W&B process to finish, PID 700<br/>Program ended successfully."],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"35e026b807274cd9b22f20b45d820534","version_minor":0,"version_major":2},"text/plain":["VBox(children=(Label(value=' 0.00MB of 0.00MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)â€¦"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["Find user logs for this run at: <code>/content/wandb/run-20201113_064611-2jhk9rna/logs/debug.log</code>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["Find internal logs for this run at: <code>/content/wandb/run-20201113_064611-2jhk9rna/logs/debug-internal.log</code>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["Synced 4 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["\n","                    <br/>Synced <strong style=\"color:#cdcd00\">WordRNN Q6b-2 SC2</strong>: <a href=\"https://wandb.ai/todayisagreatday/NNA2%20Part%20B%20Redo/runs/2jhk9rna\" target=\"_blank\">https://wandb.ai/todayisagreatday/NNA2%20Part%20B%20Redo/runs/2jhk9rna</a><br/>\n","                "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["...Successfully finished last run (ID:2jhk9rna). Initializing new run:<br/><br/>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["\n","                Tracking run with wandb version 0.10.10<br/>\n","                Resuming run <strong style=\"color:#cdcd00\">WordRNN Q6b-2 SC2</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n","                Project page: <a href=\"https://wandb.ai/todayisagreatday/NNA2%20Part%20B%20Redo\" target=\"_blank\">https://wandb.ai/todayisagreatday/NNA2%20Part%20B%20Redo</a><br/>\n","                Run page: <a href=\"https://wandb.ai/todayisagreatday/NNA2%20Part%20B%20Redo/runs/2jhk9rna\" target=\"_blank\">https://wandb.ai/todayisagreatday/NNA2%20Part%20B%20Redo/runs/2jhk9rna</a><br/>\n","                Run data is saved locally in <code>/content/wandb/run-20201113_064622-2jhk9rna</code><br/><br/>\n","            "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding (Embedding)        (None, 100, 50)           1764350   \n","_________________________________________________________________\n","dropout (Dropout)            (None, 100, 50)           0         \n","_________________________________________________________________\n","rnn (RNN)                    (None, 100, 20)           4320      \n","_________________________________________________________________\n","dropout_1 (Dropout)          (None, 100, 20)           0         \n","_________________________________________________________________\n","rnn_1 (RNN)                  (None, 20)                2520      \n","_________________________________________________________________\n","dropout_2 (Dropout)          (None, 20)                0         \n","_________________________________________________________________\n","dense (Dense)                (None, 15)                315       \n","=================================================================\n","Total params: 1,771,505\n","Trainable params: 1,771,505\n","Non-trainable params: 0\n","_________________________________________________________________\n","Epoch 1/100\n","44/44 [==============================] - 8s 183ms/step - loss: 2.6817 - accuracy: 0.0696 - val_loss: 2.6552 - val_accuracy: 0.0729\n","Epoch 2/100\n","44/44 [==============================] - 4s 93ms/step - loss: 2.6600 - accuracy: 0.0707 - val_loss: 2.6439 - val_accuracy: 0.0714\n","Epoch 3/100\n","44/44 [==============================] - 4s 92ms/step - loss: 2.6505 - accuracy: 0.0732 - val_loss: 2.6433 - val_accuracy: 0.0714\n","Epoch 4/100\n","44/44 [==============================] - 4s 93ms/step - loss: 2.6507 - accuracy: 0.0723 - val_loss: 2.6420 - val_accuracy: 0.0714\n","Epoch 5/100\n","44/44 [==============================] - 4s 93ms/step - loss: 2.6476 - accuracy: 0.0716 - val_loss: 2.6419 - val_accuracy: 0.0714\n","Epoch 6/100\n","44/44 [==============================] - 4s 94ms/step - loss: 2.6445 - accuracy: 0.0741 - val_loss: 2.6430 - val_accuracy: 0.0700\n","Epoch 7/100\n","44/44 [==============================] - 4s 90ms/step - loss: 2.6467 - accuracy: 0.0686 - val_loss: 2.6420 - val_accuracy: 0.0714\n","Epoch 8/100\n","44/44 [==============================] - 4s 91ms/step - loss: 2.6445 - accuracy: 0.0716 - val_loss: 2.6422 - val_accuracy: 0.0714\n","Epoch 9/100\n","44/44 [==============================] - 4s 91ms/step - loss: 2.6426 - accuracy: 0.0711 - val_loss: 2.5942 - val_accuracy: 0.1343\n","Epoch 10/100\n","44/44 [==============================] - 4s 94ms/step - loss: 2.2566 - accuracy: 0.1879 - val_loss: 1.8026 - val_accuracy: 0.3186\n","Epoch 11/100\n","44/44 [==============================] - 4s 93ms/step - loss: 1.7117 - accuracy: 0.3214 - val_loss: 1.4611 - val_accuracy: 0.4257\n","Epoch 12/100\n","44/44 [==============================] - 4s 93ms/step - loss: 1.2835 - accuracy: 0.4818 - val_loss: 1.1103 - val_accuracy: 0.5886\n","Epoch 13/100\n","44/44 [==============================] - 4s 94ms/step - loss: 0.9862 - accuracy: 0.6232 - val_loss: 0.8939 - val_accuracy: 0.7186\n","Epoch 14/100\n","44/44 [==============================] - 4s 92ms/step - loss: 0.7620 - accuracy: 0.7416 - val_loss: 0.7379 - val_accuracy: 0.8014\n","Epoch 15/100\n","44/44 [==============================] - 4s 93ms/step - loss: 0.5861 - accuracy: 0.8168 - val_loss: 0.6455 - val_accuracy: 0.8243\n","Epoch 16/100\n","44/44 [==============================] - 4s 95ms/step - loss: 0.4667 - accuracy: 0.8570 - val_loss: 0.5377 - val_accuracy: 0.8657\n","Epoch 17/100\n","44/44 [==============================] - 4s 92ms/step - loss: 0.3904 - accuracy: 0.8900 - val_loss: 0.5717 - val_accuracy: 0.8571\n","Epoch 18/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.3544 - accuracy: 0.9004 - val_loss: 0.6194 - val_accuracy: 0.8514\n","Epoch 19/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.2744 - accuracy: 0.9291 - val_loss: 0.6146 - val_accuracy: 0.8714\n","Epoch 20/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.2557 - accuracy: 0.9321 - val_loss: 0.6224 - val_accuracy: 0.8671\n","Epoch 21/100\n","44/44 [==============================] - 4s 92ms/step - loss: 0.2254 - accuracy: 0.9350 - val_loss: 0.6486 - val_accuracy: 0.8714\n","Epoch 22/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.2150 - accuracy: 0.9407 - val_loss: 0.6190 - val_accuracy: 0.8643\n","Epoch 23/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.1864 - accuracy: 0.9496 - val_loss: 0.6108 - val_accuracy: 0.8829\n","Epoch 24/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.1768 - accuracy: 0.9493 - val_loss: 0.6537 - val_accuracy: 0.8743\n","Epoch 25/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.1688 - accuracy: 0.9529 - val_loss: 0.6796 - val_accuracy: 0.8857\n","Epoch 26/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.1715 - accuracy: 0.9529 - val_loss: 0.7286 - val_accuracy: 0.8843\n","Epoch 27/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.1712 - accuracy: 0.9527 - val_loss: 0.6430 - val_accuracy: 0.8800\n","Epoch 28/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.1433 - accuracy: 0.9600 - val_loss: 0.6273 - val_accuracy: 0.8829\n","Epoch 29/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.1438 - accuracy: 0.9559 - val_loss: 0.6910 - val_accuracy: 0.8871\n","Epoch 30/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.1585 - accuracy: 0.9557 - val_loss: 0.7931 - val_accuracy: 0.8800\n","Epoch 31/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.1572 - accuracy: 0.9579 - val_loss: 0.6836 - val_accuracy: 0.8729\n","Epoch 32/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.1405 - accuracy: 0.9596 - val_loss: 0.6386 - val_accuracy: 0.8900\n","Epoch 33/100\n","44/44 [==============================] - 4s 89ms/step - loss: 0.1255 - accuracy: 0.9659 - val_loss: 0.6209 - val_accuracy: 0.8829\n","Epoch 34/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.1112 - accuracy: 0.9629 - val_loss: 0.6317 - val_accuracy: 0.8900\n","Epoch 35/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.1074 - accuracy: 0.9682 - val_loss: 0.6245 - val_accuracy: 0.8871\n","Epoch 36/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.1059 - accuracy: 0.9695 - val_loss: 0.6995 - val_accuracy: 0.8829\n","Epoch 37/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.1097 - accuracy: 0.9700 - val_loss: 0.6836 - val_accuracy: 0.8743\n","Epoch 38/100\n","44/44 [==============================] - 4s 92ms/step - loss: 0.1031 - accuracy: 0.9711 - val_loss: 0.6366 - val_accuracy: 0.8886\n","Epoch 39/100\n","44/44 [==============================] - 4s 94ms/step - loss: 0.0860 - accuracy: 0.9755 - val_loss: 0.7344 - val_accuracy: 0.8857\n","Epoch 40/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0960 - accuracy: 0.9741 - val_loss: 0.7721 - val_accuracy: 0.8800\n","Epoch 41/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.1176 - accuracy: 0.9686 - val_loss: 0.6465 - val_accuracy: 0.8800\n","Epoch 42/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.1038 - accuracy: 0.9689 - val_loss: 0.6800 - val_accuracy: 0.8914\n","Epoch 43/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0948 - accuracy: 0.9721 - val_loss: 0.7575 - val_accuracy: 0.8857\n","Epoch 44/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.1058 - accuracy: 0.9680 - val_loss: 0.7022 - val_accuracy: 0.8900\n","Epoch 45/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.1029 - accuracy: 0.9723 - val_loss: 0.6116 - val_accuracy: 0.8943\n","Epoch 46/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0864 - accuracy: 0.9741 - val_loss: 0.7038 - val_accuracy: 0.8929\n","Epoch 47/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0982 - accuracy: 0.9704 - val_loss: 0.6825 - val_accuracy: 0.8814\n","Epoch 48/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0881 - accuracy: 0.9737 - val_loss: 0.7229 - val_accuracy: 0.8843\n","Epoch 49/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.1230 - accuracy: 0.9632 - val_loss: 0.7138 - val_accuracy: 0.8829\n","Epoch 50/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.1026 - accuracy: 0.9661 - val_loss: 0.7294 - val_accuracy: 0.8971\n","Epoch 51/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0828 - accuracy: 0.9741 - val_loss: 0.7325 - val_accuracy: 0.8986\n","Epoch 52/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0779 - accuracy: 0.9780 - val_loss: 0.7348 - val_accuracy: 0.8971\n","Epoch 53/100\n","44/44 [==============================] - 4s 92ms/step - loss: 0.0722 - accuracy: 0.9793 - val_loss: 0.6970 - val_accuracy: 0.8971\n","Epoch 54/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0801 - accuracy: 0.9755 - val_loss: 0.7176 - val_accuracy: 0.8957\n","Epoch 55/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0807 - accuracy: 0.9745 - val_loss: 0.7802 - val_accuracy: 0.8871\n","Epoch 56/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0730 - accuracy: 0.9780 - val_loss: 0.7461 - val_accuracy: 0.8957\n","Epoch 57/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0862 - accuracy: 0.9739 - val_loss: 0.7444 - val_accuracy: 0.8843\n","Epoch 58/100\n","44/44 [==============================] - 4s 89ms/step - loss: 0.0874 - accuracy: 0.9727 - val_loss: 0.7040 - val_accuracy: 0.9000\n","Epoch 59/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0848 - accuracy: 0.9729 - val_loss: 0.7240 - val_accuracy: 0.8914\n","Epoch 60/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0671 - accuracy: 0.9827 - val_loss: 0.7422 - val_accuracy: 0.9029\n","Epoch 61/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0832 - accuracy: 0.9761 - val_loss: 0.7641 - val_accuracy: 0.8900\n","Epoch 62/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0868 - accuracy: 0.9741 - val_loss: 0.7813 - val_accuracy: 0.8857\n","Epoch 63/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0659 - accuracy: 0.9791 - val_loss: 0.6353 - val_accuracy: 0.8971\n","Epoch 64/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0689 - accuracy: 0.9796 - val_loss: 0.7476 - val_accuracy: 0.8929\n","Epoch 65/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0763 - accuracy: 0.9777 - val_loss: 0.6803 - val_accuracy: 0.8957\n","Epoch 66/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0860 - accuracy: 0.9750 - val_loss: 0.7014 - val_accuracy: 0.9000\n","Epoch 67/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0914 - accuracy: 0.9746 - val_loss: 0.8046 - val_accuracy: 0.8743\n","Epoch 68/100\n","44/44 [==============================] - 4s 89ms/step - loss: 0.0794 - accuracy: 0.9748 - val_loss: 0.7308 - val_accuracy: 0.9000\n","Epoch 69/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0877 - accuracy: 0.9748 - val_loss: 0.6376 - val_accuracy: 0.8971\n","Epoch 70/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0747 - accuracy: 0.9766 - val_loss: 0.6710 - val_accuracy: 0.8986\n","Epoch 71/100\n","44/44 [==============================] - 4s 89ms/step - loss: 0.0747 - accuracy: 0.9777 - val_loss: 0.6681 - val_accuracy: 0.8857\n","Epoch 72/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0662 - accuracy: 0.9807 - val_loss: 0.7903 - val_accuracy: 0.8814\n","Epoch 73/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0708 - accuracy: 0.9775 - val_loss: 0.7549 - val_accuracy: 0.8914\n","Epoch 74/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0749 - accuracy: 0.9759 - val_loss: 0.7031 - val_accuracy: 0.9014\n","Epoch 75/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0560 - accuracy: 0.9832 - val_loss: 0.7082 - val_accuracy: 0.9043\n","Epoch 76/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0596 - accuracy: 0.9841 - val_loss: 0.7031 - val_accuracy: 0.9014\n","Epoch 77/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0683 - accuracy: 0.9805 - val_loss: 0.6969 - val_accuracy: 0.9000\n","Epoch 78/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0647 - accuracy: 0.9796 - val_loss: 0.8077 - val_accuracy: 0.8971\n","Epoch 79/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0629 - accuracy: 0.9816 - val_loss: 0.7387 - val_accuracy: 0.9029\n","Epoch 80/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0559 - accuracy: 0.9854 - val_loss: 0.7882 - val_accuracy: 0.9057\n","Epoch 81/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0924 - accuracy: 0.9759 - val_loss: 0.6408 - val_accuracy: 0.9100\n","Epoch 82/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0526 - accuracy: 0.9820 - val_loss: 0.7406 - val_accuracy: 0.9014\n","Epoch 83/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0523 - accuracy: 0.9830 - val_loss: 0.7602 - val_accuracy: 0.9057\n","Epoch 84/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0748 - accuracy: 0.9748 - val_loss: 0.7980 - val_accuracy: 0.8957\n","Epoch 85/100\n","44/44 [==============================] - 4s 92ms/step - loss: 0.0571 - accuracy: 0.9816 - val_loss: 0.8654 - val_accuracy: 0.8986\n","Epoch 86/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0588 - accuracy: 0.9825 - val_loss: 0.7880 - val_accuracy: 0.9000\n","Epoch 87/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0684 - accuracy: 0.9791 - val_loss: 0.8000 - val_accuracy: 0.9000\n","Epoch 88/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0686 - accuracy: 0.9800 - val_loss: 0.7855 - val_accuracy: 0.9014\n","Epoch 89/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0618 - accuracy: 0.9811 - val_loss: 0.7908 - val_accuracy: 0.9000\n","Epoch 90/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0693 - accuracy: 0.9800 - val_loss: 0.7551 - val_accuracy: 0.9014\n","Epoch 91/100\n","44/44 [==============================] - 4s 92ms/step - loss: 0.0719 - accuracy: 0.9766 - val_loss: 0.8062 - val_accuracy: 0.9000\n","Epoch 92/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0475 - accuracy: 0.9866 - val_loss: 0.7667 - val_accuracy: 0.9014\n","Epoch 93/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0468 - accuracy: 0.9836 - val_loss: 0.8068 - val_accuracy: 0.8943\n","Epoch 94/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0503 - accuracy: 0.9827 - val_loss: 0.8470 - val_accuracy: 0.8900\n","Epoch 95/100\n","44/44 [==============================] - 4s 89ms/step - loss: 0.0649 - accuracy: 0.9809 - val_loss: 0.8577 - val_accuracy: 0.8771\n","Epoch 96/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0491 - accuracy: 0.9855 - val_loss: 0.8381 - val_accuracy: 0.8914\n","Epoch 97/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0586 - accuracy: 0.9809 - val_loss: 0.8765 - val_accuracy: 0.8843\n","Epoch 98/100\n","44/44 [==============================] - 4s 91ms/step - loss: 0.0590 - accuracy: 0.9816 - val_loss: 0.9143 - val_accuracy: 0.9043\n","Epoch 99/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0609 - accuracy: 0.9816 - val_loss: 0.9334 - val_accuracy: 0.8900\n","Epoch 100/100\n","44/44 [==============================] - 4s 90ms/step - loss: 0.0601 - accuracy: 0.9814 - val_loss: 0.9281 - val_accuracy: 0.8843\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7f39c6570f28>"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"10s9udsJChxm"},"source":[""],"execution_count":null,"outputs":[]}]}